{
  "contractName": "Market",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "availableBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "members",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "enum Market.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trades",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "enum Market.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "txId",
          "type": "uint256"
        }
      ],
      "name": "settle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "unregister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"availableBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum Market.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"txId\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum Market.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"unregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/ebay/contracts/Ebay-alternative.sol\":\"Market\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/ebay/contracts/Ebay-alternative.sol\":{\"keccak256\":\"0xebd6ff14760d7c26d44fa3bfad95bb3eb5babecfdd8d6f40c1579440ee3eb471\",\"urls\":[\"bzz-raw://1f00223057942b67a61672e353c2bd239414335ae78297ffa1d2e78441190712\",\"dweb:/ipfs/QmbdJqZkuqgZazrzFkh3XqdVQ6Dw6q3ioz63QqSE4reTgD\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600655600160075534801561001a57600080fd5b5033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121988061006b6000396000f3fe6080604052600436106100a05760003560e01c80638a72ea6a116100645780638a72ea6a146101ba5780638df82800146101fb5780639f65632114610224578063d0e30db01461024d578063d96a094a14610257578063dc3774b314610280576100a7565b806308ae4b0c146100ac5780631e6c598e146100e957806327e235e31461012b5780632ec2c246146101685780634420e48614610191576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611884565b6102bd565b6040516100e09190611aee565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611911565b6102dd565b60405161012296959493929190611c9e565b60405180910390f35b34801561013757600080fd5b50610152600480360381019061014d9190611884565b610366565b60405161015f9190611c29565b60405180910390f35b34801561017457600080fd5b5061018f600480360381019061018a9190611884565b61037e565b005b34801561019d57600080fd5b506101b860048036038101906101b39190611884565b6105f0565b005b3480156101c657600080fd5b506101e160048036038101906101dc9190611911565b6108c2565b6040516101f2959493929190611c44565b60405180910390f35b34801561020757600080fd5b50610222600480360381019061021d9190611911565b6109ad565b005b34801561023057600080fd5b5061024b600480360381019061024691906118b1565b610bf5565b005b610255610ee2565b005b34801561026357600080fd5b5061027e60048036038101906102799190611911565b6110c7565b005b34801561028c57600080fd5b506102a760048036038101906102a29190611884565b61156a565b6040516102b49190611c29565b60405180910390f35b60046020528060005260406000206000915054906101000a900460ff1681565b60006020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900460ff16905086565b60026020528060005260406000206000915090505481565b806001801561041f5760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461041a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041190611ba9565b60405180910390fd5b6104b3565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a990611b09565b60405180910390fd5b5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611b49565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506105ea843083611582565b50505050565b80600080156106915760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ba9565b60405180910390fd5b610725565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90611b09565b60405180910390fd5b5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ac90611b49565b60405180910390fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506101f4600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461085e9190611d1b565b925050819055506101f4600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108b69190611d1b565b92505081905550505050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461091190611e57565b80601f016020809104026020016040519081016040528092919081815260200182805461093d90611e57565b801561098a5780601f1061095f5761010080835404028352916020019161098a565b820191906000526020600020905b81548152906001019060200180831161096d57829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3490611b49565b60405180910390fd5b60008060008381526020019081526020016000209050600081600001541415610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611be9565b60405180910390fd5b60006001811115610aaf57610aae611f01565b5b8160050160009054906101000a900460ff166001811115610ad357610ad2611f01565b5b14610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90611b89565b60405180910390fd5b60018160050160006101000a81548160ff02191690836001811115610b3b57610b3a611f01565b5b02179055508060040154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b939190611d1b565b92505081905550610bf18160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360040154611582565b5050565b3360018015610c965760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8890611ba9565b60405180910390fd5b610d2a565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2090611b09565b60405180910390fd5b5b60008311610d6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6490611c09565b60405180910390fd5b600060066000815480929190610d8290611e89565b9190505590506040518060a001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185815260200160006001811115610e1957610e18611f01565b5b815250600160008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610e9c929190611761565b506060820151816003015560808201518160040160006101000a81548160ff02191690836001811115610ed257610ed1611f01565b5b0217905550905050505050505050565b3360018015610f835760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610f7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7590611ba9565b60405180910390fd5b611017565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100d90611b09565b60405180910390fd5b5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110669190611d1b565b9250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110bc9190611d1b565b925050819055505050565b33600180156111685760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a90611ba9565b60405180910390fd5b6111fc565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146111fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f290611b09565b60405180910390fd5b5b6000600160008581526020019081526020016000209050600081600001541161125a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125190611b69565b60405180910390fd5b6000600181111561126e5761126d611f01565b5b8160040160009054906101000a900460ff16600181111561129257611291611f01565b5b146112d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c990611b29565b60405180910390fd5b8060030154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561132257600080fd5b8060030154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113759190611d71565b9250508190555060018160040160006101000a81548160ff021916908360018111156113a4576113a3611f01565b5b02179055506000600760008154809291906113be90611e89565b9190505590506040518060c00160405280828152602001836000015481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836003015481526020016000600181111561145957611458611f01565b5b8152506000806007600081548092919061147290611e89565b919050558152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff0219169083600181111561155b5761155a611f01565b5b02179055509050505050505050565b60036020528060005260406000206000915090505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fb90611bc9565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116539190611d71565b9250508190555080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116a99190611d71565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116ff9190611d1b565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117559190611d1b565b92505081905550505050565b82805461176d90611e57565b90600052602060002090601f01602090048101928261178f57600085556117d6565b82601f106117a857805160ff19168380011785556117d6565b828001600101855582156117d6579182015b828111156117d55782518255916020019190600101906117ba565b5b5090506117e391906117e7565b5090565b5b808211156118005760008160009055506001016117e8565b5090565b60008135905061181381612134565b92915050565b60008083601f84011261182f5761182e611f64565b5b8235905067ffffffffffffffff81111561184c5761184b611f5f565b5b60208301915083600182028301111561186857611867611f69565b5b9250929050565b60008135905061187e8161214b565b92915050565b60006020828403121561189a57611899611f73565b5b60006118a884828501611804565b91505092915050565b6000806000604084860312156118ca576118c9611f73565b5b600084013567ffffffffffffffff8111156118e8576118e7611f6e565b5b6118f486828701611819565b935093505060206119078682870161186f565b9150509250925092565b60006020828403121561192757611926611f73565b5b60006119358482850161186f565b91505092915050565b61194781611db7565b82525050565b61195681611dc9565b82525050565b61196581611e12565b82525050565b600061197682611cff565b6119808185611d0a565b9350611990818560208601611e24565b61199981611f78565b840191505092915050565b60006119b1601683611d0a565b91506119bc82611f89565b602082019050919050565b60006119d4601583611d0a565b91506119df82611fb2565b602082019050919050565b60006119f7600a83611d0a565b9150611a0282611fdb565b602082019050919050565b6000611a1a601083611d0a565b9150611a2582612004565b602082019050919050565b6000611a3d601e83611d0a565b9150611a488261202d565b602082019050919050565b6000611a60601283611d0a565b9150611a6b82612056565b602082019050919050565b6000611a83602983611d0a565b9150611a8e8261207f565b604082019050919050565b6000611aa6601083611d0a565b9150611ab1826120ce565b602082019050919050565b6000611ac9601683611d0a565b9150611ad4826120f7565b602082019050919050565b611ae881611e08565b82525050565b6000602082019050611b03600083018461194d565b92915050565b60006020820190508181036000830152611b22816119a4565b9050919050565b60006020820190508181036000830152611b42816119c7565b9050919050565b60006020820190508181036000830152611b62816119ea565b9050919050565b60006020820190508181036000830152611b8281611a0d565b9050919050565b60006020820190508181036000830152611ba281611a30565b9050919050565b60006020820190508181036000830152611bc281611a53565b9050919050565b60006020820190508181036000830152611be281611a76565b9050919050565b60006020820190508181036000830152611c0281611a99565b9050919050565b60006020820190508181036000830152611c2281611abc565b9050919050565b6000602082019050611c3e6000830184611adf565b92915050565b600060a082019050611c596000830188611adf565b611c66602083018761193e565b8181036040830152611c78818661196b565b9050611c876060830185611adf565b611c94608083018461195c565b9695505050505050565b600060c082019050611cb36000830189611adf565b611cc06020830188611adf565b611ccd604083018761193e565b611cda606083018661193e565b611ce76080830185611adf565b611cf460a083018461195c565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b6000611d2682611e08565b9150611d3183611e08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d6657611d65611ed2565b5b828201905092915050565b6000611d7c82611e08565b9150611d8783611e08565b925082821015611d9a57611d99611ed2565b5b828203905092915050565b6000611db082611de8565b9050919050565b6000611dc282611de8565b9050919050565b60008115159050919050565b6000819050611de382612120565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611e1d82611dd5565b9050919050565b60005b83811015611e42578082015181840152602081019050611e27565b83811115611e51576000848401525b50505050565b60006002820490506001821680611e6f57607f821691505b60208210811415611e8357611e82611f30565b5b50919050565b6000611e9482611e08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ec757611ec6611ed2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f6d757374204e4f54206265207265676973746572656400000000000000000000600082015250565b7f6f66666572206d7573742062652070656e64696e670000000000000000000000600082015250565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b7f6f66666572206d75737420657869737400000000000000000000000000000000600082015250565b7f7472616465206d75737420626520696e2050454e44494e472073746174650000600082015250565b7f6d75737420626520726567697374657265640000000000000000000000000000600082015250565b7f63616e6e6f74207472616e73666572206d6f7265207468616e2063757272656e60008201527f742062616c616e63650000000000000000000000000000000000000000000000602082015250565b7f7472616465206d75737420657869737400000000000000000000000000000000600082015250565b7f63616e6e6f742073656c6c2066726565206974656d7300000000000000000000600082015250565b6002811061213157612130611f01565b5b50565b61213d81611da5565b811461214857600080fd5b50565b61215481611e08565b811461215f57600080fd5b5056fea2646970667358221220c774cb069aeb00180cdc0f383830badb211a7fef62cdc364e0f81fbd127e631964736f6c63430008050033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c80638a72ea6a116100645780638a72ea6a146101ba5780638df82800146101fb5780639f65632114610224578063d0e30db01461024d578063d96a094a14610257578063dc3774b314610280576100a7565b806308ae4b0c146100ac5780631e6c598e146100e957806327e235e31461012b5780632ec2c246146101685780634420e48614610191576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611884565b6102bd565b6040516100e09190611aee565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b9190611911565b6102dd565b60405161012296959493929190611c9e565b60405180910390f35b34801561013757600080fd5b50610152600480360381019061014d9190611884565b610366565b60405161015f9190611c29565b60405180910390f35b34801561017457600080fd5b5061018f600480360381019061018a9190611884565b61037e565b005b34801561019d57600080fd5b506101b860048036038101906101b39190611884565b6105f0565b005b3480156101c657600080fd5b506101e160048036038101906101dc9190611911565b6108c2565b6040516101f2959493929190611c44565b60405180910390f35b34801561020757600080fd5b50610222600480360381019061021d9190611911565b6109ad565b005b34801561023057600080fd5b5061024b600480360381019061024691906118b1565b610bf5565b005b610255610ee2565b005b34801561026357600080fd5b5061027e60048036038101906102799190611911565b6110c7565b005b34801561028c57600080fd5b506102a760048036038101906102a29190611884565b61156a565b6040516102b49190611c29565b60405180910390f35b60046020528060005260406000206000915054906101000a900460ff1681565b60006020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050160009054906101000a900460ff16905086565b60026020528060005260406000206000915090505481565b806001801561041f5760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461041a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041190611ba9565b60405180910390fd5b6104b3565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a990611b09565b60405180910390fd5b5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611b49565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506105ea843083611582565b50505050565b80600080156106915760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ba9565b60405180910390fd5b610725565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071b90611b09565b60405180910390fd5b5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ac90611b49565b60405180910390fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506101f4600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461085e9190611d1b565b925050819055506101f4600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108b69190611d1b565b92505081905550505050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461091190611e57565b80601f016020809104026020016040519081016040528092919081815260200182805461093d90611e57565b801561098a5780601f1061095f5761010080835404028352916020019161098a565b820191906000526020600020905b81548152906001019060200180831161096d57829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3490611b49565b60405180910390fd5b60008060008381526020019081526020016000209050600081600001541415610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611be9565b60405180910390fd5b60006001811115610aaf57610aae611f01565b5b8160050160009054906101000a900460ff166001811115610ad357610ad2611f01565b5b14610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90611b89565b60405180910390fd5b60018160050160006101000a81548160ff02191690836001811115610b3b57610b3a611f01565b5b02179055508060040154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b939190611d1b565b92505081905550610bf18160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360040154611582565b5050565b3360018015610c965760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8890611ba9565b60405180910390fd5b610d2a565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2090611b09565b60405180910390fd5b5b60008311610d6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6490611c09565b60405180910390fd5b600060066000815480929190610d8290611e89565b9190505590506040518060a001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185815260200160006001811115610e1957610e18611f01565b5b815250600160008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610e9c929190611761565b506060820151816003015560808201518160040160006101000a81548160ff02191690836001811115610ed257610ed1611f01565b5b0217905550905050505050505050565b3360018015610f835760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610f7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7590611ba9565b60405180910390fd5b611017565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611016576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100d90611b09565b60405180910390fd5b5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110669190611d1b565b9250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110bc9190611d1b565b925050819055505050565b33600180156111685760011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a90611ba9565b60405180910390fd5b6111fc565b60001515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146111fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f290611b09565b60405180910390fd5b5b6000600160008581526020019081526020016000209050600081600001541161125a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125190611b69565b60405180910390fd5b6000600181111561126e5761126d611f01565b5b8160040160009054906101000a900460ff16600181111561129257611291611f01565b5b146112d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c990611b29565b60405180910390fd5b8060030154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561132257600080fd5b8060030154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113759190611d71565b9250508190555060018160040160006101000a81548160ff021916908360018111156113a4576113a3611f01565b5b02179055506000600760008154809291906113be90611e89565b9190505590506040518060c00160405280828152602001836000015481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001836003015481526020016000600181111561145957611458611f01565b5b8152506000806007600081548092919061147290611e89565b919050558152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a08201518160050160006101000a81548160ff0219169083600181111561155b5761155a611f01565b5b02179055509050505050505050565b60036020528060005260406000206000915090505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fb90611bc9565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116539190611d71565b9250508190555080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116a99190611d71565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116ff9190611d1b565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117559190611d1b565b92505081905550505050565b82805461176d90611e57565b90600052602060002090601f01602090048101928261178f57600085556117d6565b82601f106117a857805160ff19168380011785556117d6565b828001600101855582156117d6579182015b828111156117d55782518255916020019190600101906117ba565b5b5090506117e391906117e7565b5090565b5b808211156118005760008160009055506001016117e8565b5090565b60008135905061181381612134565b92915050565b60008083601f84011261182f5761182e611f64565b5b8235905067ffffffffffffffff81111561184c5761184b611f5f565b5b60208301915083600182028301111561186857611867611f69565b5b9250929050565b60008135905061187e8161214b565b92915050565b60006020828403121561189a57611899611f73565b5b60006118a884828501611804565b91505092915050565b6000806000604084860312156118ca576118c9611f73565b5b600084013567ffffffffffffffff8111156118e8576118e7611f6e565b5b6118f486828701611819565b935093505060206119078682870161186f565b9150509250925092565b60006020828403121561192757611926611f73565b5b60006119358482850161186f565b91505092915050565b61194781611db7565b82525050565b61195681611dc9565b82525050565b61196581611e12565b82525050565b600061197682611cff565b6119808185611d0a565b9350611990818560208601611e24565b61199981611f78565b840191505092915050565b60006119b1601683611d0a565b91506119bc82611f89565b602082019050919050565b60006119d4601583611d0a565b91506119df82611fb2565b602082019050919050565b60006119f7600a83611d0a565b9150611a0282611fdb565b602082019050919050565b6000611a1a601083611d0a565b9150611a2582612004565b602082019050919050565b6000611a3d601e83611d0a565b9150611a488261202d565b602082019050919050565b6000611a60601283611d0a565b9150611a6b82612056565b602082019050919050565b6000611a83602983611d0a565b9150611a8e8261207f565b604082019050919050565b6000611aa6601083611d0a565b9150611ab1826120ce565b602082019050919050565b6000611ac9601683611d0a565b9150611ad4826120f7565b602082019050919050565b611ae881611e08565b82525050565b6000602082019050611b03600083018461194d565b92915050565b60006020820190508181036000830152611b22816119a4565b9050919050565b60006020820190508181036000830152611b42816119c7565b9050919050565b60006020820190508181036000830152611b62816119ea565b9050919050565b60006020820190508181036000830152611b8281611a0d565b9050919050565b60006020820190508181036000830152611ba281611a30565b9050919050565b60006020820190508181036000830152611bc281611a53565b9050919050565b60006020820190508181036000830152611be281611a76565b9050919050565b60006020820190508181036000830152611c0281611a99565b9050919050565b60006020820190508181036000830152611c2281611abc565b9050919050565b6000602082019050611c3e6000830184611adf565b92915050565b600060a082019050611c596000830188611adf565b611c66602083018761193e565b8181036040830152611c78818661196b565b9050611c876060830185611adf565b611c94608083018461195c565b9695505050505050565b600060c082019050611cb36000830189611adf565b611cc06020830188611adf565b611ccd604083018761193e565b611cda606083018661193e565b611ce76080830185611adf565b611cf460a083018461195c565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b6000611d2682611e08565b9150611d3183611e08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d6657611d65611ed2565b5b828201905092915050565b6000611d7c82611e08565b9150611d8783611e08565b925082821015611d9a57611d99611ed2565b5b828203905092915050565b6000611db082611de8565b9050919050565b6000611dc282611de8565b9050919050565b60008115159050919050565b6000819050611de382612120565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611e1d82611dd5565b9050919050565b60005b83811015611e42578082015181840152602081019050611e27565b83811115611e51576000848401525b50505050565b60006002820490506001821680611e6f57607f821691505b60208210811415611e8357611e82611f30565b5b50919050565b6000611e9482611e08565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ec757611ec6611ed2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f6d757374204e4f54206265207265676973746572656400000000000000000000600082015250565b7f6f66666572206d7573742062652070656e64696e670000000000000000000000600082015250565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b7f6f66666572206d75737420657869737400000000000000000000000000000000600082015250565b7f7472616465206d75737420626520696e2050454e44494e472073746174650000600082015250565b7f6d75737420626520726567697374657265640000000000000000000000000000600082015250565b7f63616e6e6f74207472616e73666572206d6f7265207468616e2063757272656e60008201527f742062616c616e63650000000000000000000000000000000000000000000000602082015250565b7f7472616465206d75737420657869737400000000000000000000000000000000600082015250565b7f63616e6e6f742073656c6c2066726565206974656d7300000000000000000000600082015250565b6002811061213157612130611f01565b5b50565b61213d81611da5565b811461214857600080fd5b50565b61215481611e08565b811461215f57600080fd5b5056fea2646970667358221220c774cb069aeb00180cdc0f383830badb211a7fef62cdc364e0f81fbd127e631964736f6c63430008050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18231:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:3",
                "type": ""
              }
            ],
            "src": "7:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "241:478:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "290:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "292:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "292:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "292:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "269:6:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "277:4:3",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "265:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "265:17:3"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "284:3:3"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "261:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "261:27:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "254:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:35:3"
                  },
                  "nodeType": "YulIf",
                  "src": "251:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "382:30:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "405:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "392:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "382:6:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "455:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
                            "nodeType": "YulIdentifier",
                            "src": "457:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "457:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "457:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "427:6:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "435:18:3",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "424:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:30:3"
                  },
                  "nodeType": "YulIf",
                  "src": "421:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "547:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "563:6:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "571:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "559:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:17:3"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "547:8:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "630:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            "nodeType": "YulIdentifier",
                            "src": "632:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "632:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "632:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "595:8:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "609:6:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "617:4:3",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "605:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "605:17:3"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "591:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:32:3"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "625:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "588:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:41:3"
                  },
                  "nodeType": "YulIf",
                  "src": "585:2:3"
                }
              ]
            },
            "name": "abi_decode_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "208:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "216:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "224:8:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "234:6:3",
                "type": ""
              }
            ],
            "src": "166:553:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "777:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "787:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "809:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "796:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "787:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "852:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "825:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "825:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "755:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "763:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "771:5:3",
                "type": ""
              }
            ],
            "src": "725:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "936:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "982:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "984:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "984:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "984:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "957:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "966:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "978:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "949:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "949:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "946:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1075:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1090:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1104:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1094:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1119:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1154:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1165:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1150:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1150:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1174:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1129:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1129:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1119:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "906:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "917:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "929:6:3",
                "type": ""
              }
            ],
            "src": "870:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1308:571:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1354:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1356:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1356:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1356:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1329:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1338:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1325:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1325:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1350:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1321:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1318:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1447:297:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1462:45:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1493:9:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1504:1:3",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1489:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1489:17:3"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1476:12:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1476:31:3"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1466:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1554:83:3",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "1556:77:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1556:79:3"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1556:79:3"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1526:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1534:18:3",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1523:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1523:30:3"
                      },
                      "nodeType": "YulIf",
                      "src": "1520:2:3"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1651:83:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1706:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1717:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1702:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1702:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1726:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1669:32:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:65:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1651:6:3"
                        },
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1659:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1754:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1769:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1783:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1773:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1799:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1834:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1845:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1830:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1830:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1854:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1809:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1809:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1799:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1262:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1273:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1285:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1293:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1301:6:3",
                "type": ""
              }
            ],
            "src": "1205:674:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1951:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1997:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1999:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1999:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1999:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1972:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1981:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1968:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1968:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1993:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1964:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1964:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1961:2:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2090:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2105:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2119:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2109:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2134:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2169:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2180:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2165:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2165:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2189:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2144:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2144:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2134:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1921:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1932:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1944:6:3",
                "type": ""
              }
            ],
            "src": "1885:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2301:61:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2318:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2349:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2323:25:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2323:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2311:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2311:45:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2311:45:3"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2289:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2296:3:3",
                "type": ""
              }
            ],
            "src": "2220:142:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2427:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2444:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2464:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2449:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2449:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2437:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2437:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2437:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2415:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2422:3:3",
                "type": ""
              }
            ],
            "src": "2368:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2554:72:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2571:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2613:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Status_$4_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2576:36:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2576:43:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2564:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:56:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2564:56:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Status_$4_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2542:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2549:3:3",
                "type": ""
              }
            ],
            "src": "2483:143:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2724:272:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2734:53:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2781:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2748:32:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:39:3"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2738:6:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2796:78:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2862:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2867:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2803:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2803:71:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2796:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2909:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2916:4:3",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2905:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2905:16:3"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2923:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2928:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2883:21:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2883:52:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2883:52:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2944:46:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2955:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2982:6:3"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2960:21:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2960:29:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2951:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2951:39:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2944:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2705:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2712:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2720:3:3",
                "type": ""
              }
            ],
            "src": "2632:364:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3148:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3158:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3224:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3229:2:3",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3165:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3158:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3330:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa",
                      "nodeType": "YulIdentifier",
                      "src": "3241:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3241:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3241:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3343:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3354:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3359:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3350:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3350:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3343:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3136:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3144:3:3",
                "type": ""
              }
            ],
            "src": "3002:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3520:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3530:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3596:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3601:2:3",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3537:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3537:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3530:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3702:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625",
                      "nodeType": "YulIdentifier",
                      "src": "3613:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3613:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3613:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3715:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3726:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3731:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3722:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3722:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3715:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3508:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3516:3:3",
                "type": ""
              }
            ],
            "src": "3374:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3892:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3902:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3968:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3973:2:3",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3909:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3909:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3902:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4074:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                      "nodeType": "YulIdentifier",
                      "src": "3985:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3985:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3985:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4087:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4098:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4103:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4094:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4087:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3880:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3888:3:3",
                "type": ""
              }
            ],
            "src": "3746:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4264:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4274:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4340:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4345:2:3",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4281:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4281:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4274:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4446:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce",
                      "nodeType": "YulIdentifier",
                      "src": "4357:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4357:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4459:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4470:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4475:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4466:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4466:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4459:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4252:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4260:3:3",
                "type": ""
              }
            ],
            "src": "4118:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4636:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4646:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4712:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4717:2:3",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4653:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4653:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4646:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4818:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21",
                      "nodeType": "YulIdentifier",
                      "src": "4729:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4729:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4729:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4831:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4842:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4847:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4838:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4838:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4831:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4624:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4632:3:3",
                "type": ""
              }
            ],
            "src": "4490:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5008:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5018:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5084:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5089:2:3",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5025:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5025:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5018:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5190:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18",
                      "nodeType": "YulIdentifier",
                      "src": "5101:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5101:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5101:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5203:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5214:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5219:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5210:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5210:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5203:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4996:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5004:3:3",
                "type": ""
              }
            ],
            "src": "4862:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5380:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5390:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5456:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5461:2:3",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5397:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5390:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5562:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a",
                      "nodeType": "YulIdentifier",
                      "src": "5473:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5473:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5473:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5575:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5586:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5591:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5582:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5582:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5575:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5368:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5376:3:3",
                "type": ""
              }
            ],
            "src": "5234:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5752:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5762:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5828:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5833:2:3",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5769:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5769:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5762:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5934:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d",
                      "nodeType": "YulIdentifier",
                      "src": "5845:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5845:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5845:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5947:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5958:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5963:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5954:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5954:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5947:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5740:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5748:3:3",
                "type": ""
              }
            ],
            "src": "5606:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6124:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6134:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6200:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6205:2:3",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6141:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6141:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6134:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6306:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026",
                      "nodeType": "YulIdentifier",
                      "src": "6217:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6217:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6217:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6319:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6330:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6335:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6326:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6326:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6319:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6112:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6120:3:3",
                "type": ""
              }
            ],
            "src": "5978:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6415:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6432:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6455:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6437:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6437:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6425:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6425:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6425:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6403:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6410:3:3",
                "type": ""
              }
            ],
            "src": "6350:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6566:118:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6576:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6588:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6599:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6584:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6584:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6576:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6650:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6663:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6674:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6659:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6659:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6612:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6612:65:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6612:65:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6538:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6550:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6561:4:3",
                "type": ""
              }
            ],
            "src": "6474:210:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6861:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6871:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6883:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6894:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6879:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6879:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6871:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6918:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6929:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6914:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6914:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6937:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6943:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6933:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6933:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6907:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6907:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6907:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6963:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7097:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6971:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6971:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6963:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6841:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6856:4:3",
                "type": ""
              }
            ],
            "src": "6690:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7286:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7296:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7308:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7319:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7304:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7304:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7296:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7343:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7354:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7339:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7339:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7362:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7368:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7358:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7358:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7332:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7332:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7332:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7388:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7522:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7396:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7396:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7388:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7266:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7281:4:3",
                "type": ""
              }
            ],
            "src": "7115:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7711:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7721:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7733:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7744:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7729:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7729:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7721:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7768:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7779:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7764:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7764:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7787:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7793:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7783:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7783:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7757:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7757:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7757:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7813:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7947:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7821:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7821:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7813:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7691:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7706:4:3",
                "type": ""
              }
            ],
            "src": "7540:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8136:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8146:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8158:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8169:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8154:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8154:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8146:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8193:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8204:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8189:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8189:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8212:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8218:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8208:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8208:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8182:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8182:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8182:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8238:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8372:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8246:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8246:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8238:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8116:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8131:4:3",
                "type": ""
              }
            ],
            "src": "7965:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8561:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8571:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8583:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8594:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8579:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8579:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8571:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8618:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8629:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8614:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8614:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8637:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8643:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8633:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8633:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8607:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8607:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8607:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8663:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8797:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8671:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8671:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8663:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8541:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8556:4:3",
                "type": ""
              }
            ],
            "src": "8390:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8986:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8996:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9008:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9019:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9004:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9004:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8996:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9043:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9054:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9039:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9039:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9062:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9068:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9058:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9058:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9032:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9032:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9032:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9088:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9222:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9096:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9096:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9088:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8966:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8981:4:3",
                "type": ""
              }
            ],
            "src": "8815:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9411:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9421:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9433:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9444:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9429:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9429:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9421:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9468:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9479:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9464:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9464:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9487:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9493:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9483:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9483:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9457:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9457:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9457:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9513:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9647:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9521:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9521:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9513:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9391:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9406:4:3",
                "type": ""
              }
            ],
            "src": "9240:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9836:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9846:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9858:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9869:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9854:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9854:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9846:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9893:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9904:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9889:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9889:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9912:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9918:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9908:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9908:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9882:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9882:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9882:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9938:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10072:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9946:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9946:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9938:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9816:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9831:4:3",
                "type": ""
              }
            ],
            "src": "9665:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10261:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10271:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10283:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10294:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10279:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10279:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10271:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10318:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10329:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10314:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10314:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10337:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10343:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10333:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10333:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10307:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10307:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10307:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10363:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10497:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10371:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10371:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10363:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10241:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10256:4:3",
                "type": ""
              }
            ],
            "src": "10090:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10613:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10623:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10635:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10646:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10631:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10631:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10623:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10703:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10716:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10727:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10712:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10712:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10659:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10659:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10659:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10585:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10597:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10608:4:3",
                "type": ""
              }
            ],
            "src": "10515:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10995:547:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11005:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11017:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11028:3:3",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11013:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11013:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11005:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11086:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11099:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11110:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11095:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11095:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11042:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11042:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11042:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11183:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11196:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11207:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11192:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11192:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11123:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11123:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11123:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11232:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11243:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11228:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11228:18:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11252:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11258:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11248:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11248:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11221:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11221:48:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11221:48:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11278:86:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11350:6:3"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11359:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11286:63:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11286:78:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11278:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11418:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11431:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11442:2:3",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11427:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11427:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11374:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11374:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11374:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "11506:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11519:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11530:3:3",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11515:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11515:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Status_$4_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11456:49:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11456:79:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11456:79:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_string_memory_ptr_t_uint256_t_enum$_Status_$4__to_t_uint256_t_address_payable_t_string_memory_ptr_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10935:9:3",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10947:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10955:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10963:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10971:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10979:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10990:4:3",
                "type": ""
              }
            ],
            "src": "10743:799:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11824:575:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11834:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11846:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11857:3:3",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11842:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11842:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11834:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11915:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11928:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11939:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11924:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11924:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11871:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11871:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11871:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11996:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12009:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12020:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12005:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12005:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11952:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11952:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11952:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12094:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12107:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12118:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12103:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12103:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12034:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12034:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12034:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12192:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12205:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12216:2:3",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12201:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12201:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12132:59:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12132:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12132:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12274:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12287:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12298:3:3",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12283:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12283:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12230:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12230:73:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12230:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "12363:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12376:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12387:3:3",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12372:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12372:19:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Status_$4_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12313:49:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12313:79:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12313:79:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256_t_enum$_Status_$4__to_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11756:9:3",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "11768:6:3",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11776:6:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11784:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11792:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11800:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11808:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11819:4:3",
                "type": ""
              }
            ],
            "src": "11548:851:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12445:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12455:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12471:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12465:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12465:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "12455:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12438:6:3",
                "type": ""
              }
            ],
            "src": "12405:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12545:40:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12556:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12572:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12566:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12566:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12556:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12528:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12538:6:3",
                "type": ""
              }
            ],
            "src": "12486:99:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12687:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12704:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12709:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12697:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12697:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12697:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12725:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12744:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12749:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12740:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12740:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "12725:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12659:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12664:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "12675:11:3",
                "type": ""
              }
            ],
            "src": "12591:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12810:261:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12820:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12843:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12825:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12825:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12820:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12854:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12877:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12859:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12859:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12854:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13017:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13019:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13019:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13019:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12938:1:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12945:66:3",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13013:1:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12941:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12941:74:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12935:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12935:81:3"
                  },
                  "nodeType": "YulIf",
                  "src": "12932:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13049:16:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13060:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13063:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13056:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13056:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13049:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12797:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12800:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12806:3:3",
                "type": ""
              }
            ],
            "src": "12766:305:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13122:146:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13132:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13155:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13137:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13137:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13132:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13166:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13189:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13171:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13171:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13166:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13213:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13215:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13215:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13215:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13207:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13210:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13204:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13204:8:3"
                  },
                  "nodeType": "YulIf",
                  "src": "13201:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13245:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13257:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13260:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13253:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13253:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13245:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13108:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13111:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13117:4:3",
                "type": ""
              }
            ],
            "src": "13077:191:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13319:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13329:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13358:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13340:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13340:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13329:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13301:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13311:7:3",
                "type": ""
              }
            ],
            "src": "13274:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13429:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13439:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13468:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13450:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13450:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13439:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13411:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13421:7:3",
                "type": ""
              }
            ],
            "src": "13376:104:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13528:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13538:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13563:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13556:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13556:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13549:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13549:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13538:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13510:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13520:7:3",
                "type": ""
              }
            ],
            "src": "13486:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13635:74:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13645:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13656:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13645:7:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13697:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Status_$4",
                      "nodeType": "YulIdentifier",
                      "src": "13662:34:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13662:41:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13662:41:3"
                }
              ]
            },
            "name": "cleanup_t_enum$_Status_$4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13617:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13627:7:3",
                "type": ""
              }
            ],
            "src": "13582:127:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13760:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13770:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13785:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13792:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13781:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13781:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13770:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13742:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13752:7:3",
                "type": ""
              }
            ],
            "src": "13715:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13892:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13902:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13913:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13902:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13874:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13884:7:3",
                "type": ""
              }
            ],
            "src": "13847:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13996:61:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14006:45:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14045:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Status_$4",
                      "nodeType": "YulIdentifier",
                      "src": "14019:25:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14019:32:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "14006:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Status_$4_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13976:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "13986:9:3",
                "type": ""
              }
            ],
            "src": "13930:127:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14112:258:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14122:10:3",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "14131:1:3",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "14126:1:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14191:63:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14216:3:3"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "14221:1:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14212:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14212:11:3"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "14235:3:3"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "14240:1:3"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14231:3:3"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14231:11:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "14225:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14225:18:3"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14205:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14205:39:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14205:39:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14152:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14155:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14149:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14149:13:3"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "14163:19:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14165:15:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "14174:1:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14177:2:3",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14170:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14170:10:3"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14165:1:3"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "14145:3:3",
                    "statements": []
                  },
                  "src": "14141:113:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14288:76:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "14338:3:3"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "14343:6:3"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14334:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14334:16:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14352:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14327:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14327:27:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14327:27:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "14269:1:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14272:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14266:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14266:13:3"
                  },
                  "nodeType": "YulIf",
                  "src": "14263:2:3"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "14094:3:3",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "14099:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14104:6:3",
                "type": ""
              }
            ],
            "src": "14063:307:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14427:269:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14437:22:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14451:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14457:1:3",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14447:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14447:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14437:6:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14468:38:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14498:4:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14504:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14494:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14494:12:3"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "14472:18:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14545:51:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14559:27:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "14573:6:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14581:4:3",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "14569:3:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14569:17:3"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14559:6:3"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "14525:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14518:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14518:26:3"
                  },
                  "nodeType": "YulIf",
                  "src": "14515:2:3"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14648:42:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "14662:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14662:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14662:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "14612:18:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14635:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14643:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14632:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14632:14:3"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14609:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14609:38:3"
                  },
                  "nodeType": "YulIf",
                  "src": "14606:2:3"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "14411:4:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14420:6:3",
                "type": ""
              }
            ],
            "src": "14376:320:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14745:190:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14755:33:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14782:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14764:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14764:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14755:5:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14878:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14880:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14880:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14880:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14803:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14810:66:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14800:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14800:77:3"
                  },
                  "nodeType": "YulIf",
                  "src": "14797:2:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14909:20:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14920:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14927:1:3",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14916:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14916:13:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14909:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14731:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14741:3:3",
                "type": ""
              }
            ],
            "src": "14702:233:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14969:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14986:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14989:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14979:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14979:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14979:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15083:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15086:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15076:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15076:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15076:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15107:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15110:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15100:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15100:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15100:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14941:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15155:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15172:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15175:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15165:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15165:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15165:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15269:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15272:4:3",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15262:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15262:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15262:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15293:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15296:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15286:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15286:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15286:15:3"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "15127:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15341:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15358:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15361:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15351:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15351:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15351:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15455:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15458:4:3",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15448:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15448:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15448:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15479:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15482:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15472:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15472:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15472:15:3"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "15313:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15588:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15605:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15608:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15598:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15598:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15598:12:3"
                }
              ]
            },
            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
            "nodeType": "YulFunctionDefinition",
            "src": "15499:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15711:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15728:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15731:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15721:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15721:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15721:12:3"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "15622:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15834:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15851:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15854:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15844:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15844:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15844:12:3"
                }
              ]
            },
            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
            "nodeType": "YulFunctionDefinition",
            "src": "15745:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15957:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15974:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15977:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15967:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15967:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15967:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "15868:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16080:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16097:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16100:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16090:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16090:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16090:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "15991:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16162:54:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16172:38:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16190:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16197:2:3",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16186:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16186:14:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16206:2:3",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "16202:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16202:7:3"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "16182:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16182:28:3"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "16172:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16145:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "16155:6:3",
                "type": ""
              }
            ],
            "src": "16114:102:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16328:66:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16350:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16358:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16346:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16346:14:3"
                      },
                      {
                        "hexValue": "6d757374204e4f542062652072656769737465726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16362:24:3",
                        "type": "",
                        "value": "must NOT be registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16339:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16339:48:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16339:48:3"
                }
              ]
            },
            "name": "store_literal_in_memory_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16320:6:3",
                "type": ""
              }
            ],
            "src": "16222:172:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16506:65:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16528:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16536:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16524:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16524:14:3"
                      },
                      {
                        "hexValue": "6f66666572206d7573742062652070656e64696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16540:23:3",
                        "type": "",
                        "value": "offer must be pending"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16517:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16517:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16517:47:3"
                }
              ]
            },
            "name": "store_literal_in_memory_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16498:6:3",
                "type": ""
              }
            ],
            "src": "16400:171:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16683:54:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16705:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16713:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16701:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16701:14:3"
                      },
                      {
                        "hexValue": "6f6e6c792061646d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16717:12:3",
                        "type": "",
                        "value": "only admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16694:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16694:36:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16694:36:3"
                }
              ]
            },
            "name": "store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16675:6:3",
                "type": ""
              }
            ],
            "src": "16577:160:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16849:60:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16871:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16879:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16867:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16867:14:3"
                      },
                      {
                        "hexValue": "6f66666572206d757374206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16883:18:3",
                        "type": "",
                        "value": "offer must exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16860:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16860:42:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16860:42:3"
                }
              ]
            },
            "name": "store_literal_in_memory_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16841:6:3",
                "type": ""
              }
            ],
            "src": "16743:166:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17021:74:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17043:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17051:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17039:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17039:14:3"
                      },
                      {
                        "hexValue": "7472616465206d75737420626520696e2050454e44494e47207374617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17055:32:3",
                        "type": "",
                        "value": "trade must be in PENDING state"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17032:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17032:56:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17032:56:3"
                }
              ]
            },
            "name": "store_literal_in_memory_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17013:6:3",
                "type": ""
              }
            ],
            "src": "16915:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17207:62:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17229:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17237:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17225:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17225:14:3"
                      },
                      {
                        "hexValue": "6d7573742062652072656769737465726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17241:20:3",
                        "type": "",
                        "value": "must be registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17218:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17218:44:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17218:44:3"
                }
              ]
            },
            "name": "store_literal_in_memory_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17199:6:3",
                "type": ""
              }
            ],
            "src": "17101:168:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17381:122:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17403:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17411:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17399:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17399:14:3"
                      },
                      {
                        "hexValue": "63616e6e6f74207472616e73666572206d6f7265207468616e2063757272656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17415:34:3",
                        "type": "",
                        "value": "cannot transfer more than curren"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17392:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17392:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17392:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17471:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17479:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17467:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17467:15:3"
                      },
                      {
                        "hexValue": "742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17484:11:3",
                        "type": "",
                        "value": "t balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17460:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17460:36:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17460:36:3"
                }
              ]
            },
            "name": "store_literal_in_memory_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17373:6:3",
                "type": ""
              }
            ],
            "src": "17275:228:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17615:60:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17637:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17645:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17633:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17633:14:3"
                      },
                      {
                        "hexValue": "7472616465206d757374206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17649:18:3",
                        "type": "",
                        "value": "trade must exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17626:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17626:42:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17626:42:3"
                }
              ]
            },
            "name": "store_literal_in_memory_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17607:6:3",
                "type": ""
              }
            ],
            "src": "17509:166:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17787:66:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17809:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17817:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17805:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17805:14:3"
                      },
                      {
                        "hexValue": "63616e6e6f742073656c6c2066726565206974656d73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17821:24:3",
                        "type": "",
                        "value": "cannot sell free items"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17798:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17798:48:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17798:48:3"
                }
              ]
            },
            "name": "store_literal_in_memory_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17779:6:3",
                "type": ""
              }
            ],
            "src": "17681:172:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17910:62:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17944:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "17946:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17946:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17946:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17933:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17940:1:3",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "17930:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17930:12:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17923:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17923:20:3"
                  },
                  "nodeType": "YulIf",
                  "src": "17920:2:3"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Status_$4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17903:5:3",
                "type": ""
              }
            ],
            "src": "17859:113:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18021:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18078:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18087:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18090:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18080:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18080:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18080:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18044:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18069:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "18051:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18051:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18041:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18041:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18034:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18034:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "18031:2:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18014:5:3",
                "type": ""
              }
            ],
            "src": "17978:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18149:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18206:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18215:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18218:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18208:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18208:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18208:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18172:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18197:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "18179:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18179:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18169:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18169:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18162:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18162:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "18159:2:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18142:5:3",
                "type": ""
              }
            ],
            "src": "18106:122:3"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_Status_$4_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$4_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_payable_t_string_memory_ptr_t_uint256_t_enum$_Status_$4__to_t_uint256_t_address_payable_t_string_memory_ptr_t_uint256_t_uint8__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_enum$_Status_$4_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256_t_enum$_Status_$4__to_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256_t_uint8__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_enum$_Status_$4_to_t_uint8_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_Status_$4(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$4(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Status_$4_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$4(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"must NOT be registered\")\n\n    }\n\n    function store_literal_in_memory_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625(memPtr) {\n\n        mstore(add(memPtr, 0), \"offer must be pending\")\n\n    }\n\n    function store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d(memPtr) {\n\n        mstore(add(memPtr, 0), \"only admin\")\n\n    }\n\n    function store_literal_in_memory_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce(memPtr) {\n\n        mstore(add(memPtr, 0), \"offer must exist\")\n\n    }\n\n    function store_literal_in_memory_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21(memPtr) {\n\n        mstore(add(memPtr, 0), \"trade must be in PENDING state\")\n\n    }\n\n    function store_literal_in_memory_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18(memPtr) {\n\n        mstore(add(memPtr, 0), \"must be registered\")\n\n    }\n\n    function store_literal_in_memory_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot transfer more than curren\")\n\n        mstore(add(memPtr, 32), \"t balance\")\n\n    }\n\n    function store_literal_in_memory_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d(memPtr) {\n\n        mstore(add(memPtr, 0), \"trade must exist\")\n\n    }\n\n    function store_literal_in_memory_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot sell free items\")\n\n    }\n\n    function validator_assert_t_enum$_Status_$4(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "27:4170:0:-:0;;;888:1;869:20;;915:1;896:20;;929:60;;;;;;;;;;970:10;954:5;;:27;;;;;;;;;;;;;;;;;;27:4170;;;;;;",
  "deployedSourceMap": "27:4170:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;559:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;645:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3134:259;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2894:228;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;602:36;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2472:410;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1075:393;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2213:200;;;:::i;:::-;;1503:694;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;692:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;789:39;;;;;;;;;;;;;;;;;;;;;;:::o;559:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;645:40::-;;;;;;;;;;;;;;;;;:::o;3134:259::-;3210:6;3218:4;3884:10;3881:188;;;3938:4;3919:23;;:7;:15;3927:6;3919:15;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;3911:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;;;4025:5;4006:24;;:7;:15;4014:6;4006:15;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;3998:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;4154:5:::1;;;;;;;;;;;4140:19;;:10;:19;;;4132:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3256:18:::2;3277:8;:16;3286:6;3277:16;;;;;;;;;;;;;;;;3256:37;;3322:5;3304:7;:15;3312:6;3304:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;3338:47;3348:6;3364:4;3371:13;3338:9;:47::i;:::-;3245:148;3134:259:::0;;;:::o;2894:228::-;2968:6;2976:5;3884:10;3881:188;;;3938:4;3919:23;;:7;:15;3927:6;3919:15;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;3911:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;;;4025:5;4006:24;;:7;:15;4014:6;4006:15;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;3998:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;4154:5:::1;;;;;;;;;;;4140:19;;:10;:19;;;4132:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3033:4:::2;3015:7;:15;3023:6;3015:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;3068:3;3048:8;:16;3057:6;3048:16;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;3111:3;3082:17;:25;3100:6;3082:25;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;2894:228:::0;;;:::o;602:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2472:410::-;4154:5;;;;;;;;;;;4140:19;;:10;:19;;;4132:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2551:19:::1;2573:6:::0;:12:::1;2580:4;2573:12;;;;;;;;;;;2551:34;;2616:1;2604:5;:8;;;:13;;2596:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2673:14;2657:30;;;;;;;;:::i;:::-;;:5;:12;;;;;;;;;;;;:30;;;;;;;;:::i;:::-;;;2649:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2748:11;2733:5;:12;;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2803:5;:11;;;2770:17;:29;2788:10;2770:29;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;2825:49;2835:5;:11;;;;;;;;;;;;2848:5;:12;;;;;;;;;;;;2862:5;:11;;;2825:9;:49::i;:::-;2540:342;2472:410:::0;:::o;1075:393::-;1170:10;1182:4;3884:10;3881:188;;;3938:4;3919:23;;:7;:15;3927:6;3919:15;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;3911:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;;;4025:5;4006:24;;:7;:15;4014:6;4006:15;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;3998:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;1215:1:::1;1207:5;:9;1199:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1254:12;1269:11;;:13;;;;;;;;;:::i;:::-;;;;;1254:28;;1311:149;;;;;;;;1331:7;1311:149;;;;1361:10;1311:149;;;;;;1387:11;;1311:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:5;1311:149;;;;1435:14;1311:149;;;;;;;;:::i;:::-;;;;::::0;1293:6:::1;:15;1300:7;1293:15;;;;;;;;;;;:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1188:280;1075:393:::0;;;;;:::o;2213:200::-;2290:10;2302:4;3884:10;3881:188;;;3938:4;3919:23;;:7;:15;3927:6;3919:15;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;3911:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;;;4025:5;4006:24;;:7;:15;4014:6;4006:15;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;3998:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;2343:9:::1;2319:8;:20;2328:10;2319:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2396:9;2363:17;:29;2381:10;2363:29;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;2213:200:::0;;:::o;1503:694::-;1569:10;1581:4;3884:10;3881:188;;;3938:4;3919:23;;:7;:15;3927:6;3919:15;;;;;;;;;;;;;;;;;;;;;;;;;:23;;;3911:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;;;4025:5;4006:24;;:7;:15;4014:6;4006:15;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;3998:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3881:188;1598:19:::1;1620:6;:15;1627:7;1620:15;;;;;;;;;;;1598:37;;1665:1;1654:5;:8;;;:12;1646:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1722:14;1706:30;;;;;;;;:::i;:::-;;:5;:12;;;;;;;;;;;;:30;;;;;;;;:::i;:::-;;;1698:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1823:5;:11;;;1781:17;:38;1807:10;1781:38;;;;;;;;;;;;;;;;:53;;1773:62;;;::::0;::::1;;1888:5;:11;;;1846:17;:38;1872:10;1846:38;;;;;;;;;;;;;;;;:53;;;;;;;:::i;:::-;;;;;;;;1925:11;1910:5;:12;;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1947:12;1962:11;;:13;;;;;;;;;:::i;:::-;;;;;1947:28;;2010:179;;;;;;;;2030:7;2010:179;;;;2053:5;:8;;;2010:179;;;;2084:10;2010:179;;;;;;2110:5;:12;;;;;;;;;;;;2010:179;;;;;;2138:5;:11;;;2010:179;;;;2164:14;2010:179;;;;;;;;:::i;:::-;;;;::::0;1986:6:::1;:21:::0;1993:11:::1;;:13;;;;;;;;;:::i;:::-;;;;;1986:21;;;;;;;;;;;:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1587:610;;1503:694:::0;;;:::o;692:49::-;;;;;;;;;;;;;;;;;:::o;3405:318::-;3509:6;3491:8;:14;3500:4;3491:14;;;;;;;;;;;;;;;;:24;;3483:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3590:6;3572:8;:14;3581:4;3572:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;3634:6;3607:17;:23;3625:4;3607:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;3667:6;3651:8;:12;3660:2;3651:12;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;3709:6;3684:17;:21;3702:2;3684:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;3405:318;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;166:553::-;224:8;234:6;284:3;277:4;269:6;265:17;261:27;251:2;;292:79;;:::i;:::-;251:2;405:6;392:20;382:30;;435:18;427:6;424:30;421:2;;;457:79;;:::i;:::-;421:2;571:4;563:6;559:17;547:29;;625:3;617:4;609:6;605:17;595:8;591:32;588:41;585:2;;;632:79;;:::i;:::-;585:2;241:478;;;;;:::o;725:139::-;771:5;809:6;796:20;787:29;;825:33;852:5;825:33;:::i;:::-;777:87;;;;:::o;870:329::-;929:6;978:2;966:9;957:7;953:23;949:32;946:2;;;984:79;;:::i;:::-;946:2;1104:1;1129:53;1174:7;1165:6;1154:9;1150:22;1129:53;:::i;:::-;1119:63;;1075:117;936:263;;;;:::o;1205:674::-;1285:6;1293;1301;1350:2;1338:9;1329:7;1325:23;1321:32;1318:2;;;1356:79;;:::i;:::-;1318:2;1504:1;1493:9;1489:17;1476:31;1534:18;1526:6;1523:30;1520:2;;;1556:79;;:::i;:::-;1520:2;1669:65;1726:7;1717:6;1706:9;1702:22;1669:65;:::i;:::-;1651:83;;;;1447:297;1783:2;1809:53;1854:7;1845:6;1834:9;1830:22;1809:53;:::i;:::-;1799:63;;1754:118;1308:571;;;;;:::o;1885:329::-;1944:6;1993:2;1981:9;1972:7;1968:23;1964:32;1961:2;;;1999:79;;:::i;:::-;1961:2;2119:1;2144:53;2189:7;2180:6;2169:9;2165:22;2144:53;:::i;:::-;2134:63;;2090:117;1951:263;;;;:::o;2220:142::-;2323:32;2349:5;2323:32;:::i;:::-;2318:3;2311:45;2301:61;;:::o;2368:109::-;2449:21;2464:5;2449:21;:::i;:::-;2444:3;2437:34;2427:50;;:::o;2483:143::-;2576:43;2613:5;2576:43;:::i;:::-;2571:3;2564:56;2554:72;;:::o;2632:364::-;2720:3;2748:39;2781:5;2748:39;:::i;:::-;2803:71;2867:6;2862:3;2803:71;:::i;:::-;2796:78;;2883:52;2928:6;2923:3;2916:4;2909:5;2905:16;2883:52;:::i;:::-;2960:29;2982:6;2960:29;:::i;:::-;2955:3;2951:39;2944:46;;2724:272;;;;;:::o;3002:366::-;3144:3;3165:67;3229:2;3224:3;3165:67;:::i;:::-;3158:74;;3241:93;3330:3;3241:93;:::i;:::-;3359:2;3354:3;3350:12;3343:19;;3148:220;;;:::o;3374:366::-;3516:3;3537:67;3601:2;3596:3;3537:67;:::i;:::-;3530:74;;3613:93;3702:3;3613:93;:::i;:::-;3731:2;3726:3;3722:12;3715:19;;3520:220;;;:::o;3746:366::-;3888:3;3909:67;3973:2;3968:3;3909:67;:::i;:::-;3902:74;;3985:93;4074:3;3985:93;:::i;:::-;4103:2;4098:3;4094:12;4087:19;;3892:220;;;:::o;4118:366::-;4260:3;4281:67;4345:2;4340:3;4281:67;:::i;:::-;4274:74;;4357:93;4446:3;4357:93;:::i;:::-;4475:2;4470:3;4466:12;4459:19;;4264:220;;;:::o;4490:366::-;4632:3;4653:67;4717:2;4712:3;4653:67;:::i;:::-;4646:74;;4729:93;4818:3;4729:93;:::i;:::-;4847:2;4842:3;4838:12;4831:19;;4636:220;;;:::o;4862:366::-;5004:3;5025:67;5089:2;5084:3;5025:67;:::i;:::-;5018:74;;5101:93;5190:3;5101:93;:::i;:::-;5219:2;5214:3;5210:12;5203:19;;5008:220;;;:::o;5234:366::-;5376:3;5397:67;5461:2;5456:3;5397:67;:::i;:::-;5390:74;;5473:93;5562:3;5473:93;:::i;:::-;5591:2;5586:3;5582:12;5575:19;;5380:220;;;:::o;5606:366::-;5748:3;5769:67;5833:2;5828:3;5769:67;:::i;:::-;5762:74;;5845:93;5934:3;5845:93;:::i;:::-;5963:2;5958:3;5954:12;5947:19;;5752:220;;;:::o;5978:366::-;6120:3;6141:67;6205:2;6200:3;6141:67;:::i;:::-;6134:74;;6217:93;6306:3;6217:93;:::i;:::-;6335:2;6330:3;6326:12;6319:19;;6124:220;;;:::o;6350:118::-;6437:24;6455:5;6437:24;:::i;:::-;6432:3;6425:37;6415:53;;:::o;6474:210::-;6561:4;6599:2;6588:9;6584:18;6576:26;;6612:65;6674:1;6663:9;6659:17;6650:6;6612:65;:::i;:::-;6566:118;;;;:::o;6690:419::-;6856:4;6894:2;6883:9;6879:18;6871:26;;6943:9;6937:4;6933:20;6929:1;6918:9;6914:17;6907:47;6971:131;7097:4;6971:131;:::i;:::-;6963:139;;6861:248;;;:::o;7115:419::-;7281:4;7319:2;7308:9;7304:18;7296:26;;7368:9;7362:4;7358:20;7354:1;7343:9;7339:17;7332:47;7396:131;7522:4;7396:131;:::i;:::-;7388:139;;7286:248;;;:::o;7540:419::-;7706:4;7744:2;7733:9;7729:18;7721:26;;7793:9;7787:4;7783:20;7779:1;7768:9;7764:17;7757:47;7821:131;7947:4;7821:131;:::i;:::-;7813:139;;7711:248;;;:::o;7965:419::-;8131:4;8169:2;8158:9;8154:18;8146:26;;8218:9;8212:4;8208:20;8204:1;8193:9;8189:17;8182:47;8246:131;8372:4;8246:131;:::i;:::-;8238:139;;8136:248;;;:::o;8390:419::-;8556:4;8594:2;8583:9;8579:18;8571:26;;8643:9;8637:4;8633:20;8629:1;8618:9;8614:17;8607:47;8671:131;8797:4;8671:131;:::i;:::-;8663:139;;8561:248;;;:::o;8815:419::-;8981:4;9019:2;9008:9;9004:18;8996:26;;9068:9;9062:4;9058:20;9054:1;9043:9;9039:17;9032:47;9096:131;9222:4;9096:131;:::i;:::-;9088:139;;8986:248;;;:::o;9240:419::-;9406:4;9444:2;9433:9;9429:18;9421:26;;9493:9;9487:4;9483:20;9479:1;9468:9;9464:17;9457:47;9521:131;9647:4;9521:131;:::i;:::-;9513:139;;9411:248;;;:::o;9665:419::-;9831:4;9869:2;9858:9;9854:18;9846:26;;9918:9;9912:4;9908:20;9904:1;9893:9;9889:17;9882:47;9946:131;10072:4;9946:131;:::i;:::-;9938:139;;9836:248;;;:::o;10090:419::-;10256:4;10294:2;10283:9;10279:18;10271:26;;10343:9;10337:4;10333:20;10329:1;10318:9;10314:17;10307:47;10371:131;10497:4;10371:131;:::i;:::-;10363:139;;10261:248;;;:::o;10515:222::-;10608:4;10646:2;10635:9;10631:18;10623:26;;10659:71;10727:1;10716:9;10712:17;10703:6;10659:71;:::i;:::-;10613:124;;;;:::o;10743:799::-;10990:4;11028:3;11017:9;11013:19;11005:27;;11042:71;11110:1;11099:9;11095:17;11086:6;11042:71;:::i;:::-;11123:88;11207:2;11196:9;11192:18;11183:6;11123:88;:::i;:::-;11258:9;11252:4;11248:20;11243:2;11232:9;11228:18;11221:48;11286:78;11359:4;11350:6;11286:78;:::i;:::-;11278:86;;11374:72;11442:2;11431:9;11427:18;11418:6;11374:72;:::i;:::-;11456:79;11530:3;11519:9;11515:19;11506:6;11456:79;:::i;:::-;10995:547;;;;;;;;:::o;11548:851::-;11819:4;11857:3;11846:9;11842:19;11834:27;;11871:71;11939:1;11928:9;11924:17;11915:6;11871:71;:::i;:::-;11952:72;12020:2;12009:9;12005:18;11996:6;11952:72;:::i;:::-;12034:88;12118:2;12107:9;12103:18;12094:6;12034:88;:::i;:::-;12132;12216:2;12205:9;12201:18;12192:6;12132:88;:::i;:::-;12230:73;12298:3;12287:9;12283:19;12274:6;12230:73;:::i;:::-;12313:79;12387:3;12376:9;12372:19;12363:6;12313:79;:::i;:::-;11824:575;;;;;;;;;:::o;12486:99::-;12538:6;12572:5;12566:12;12556:22;;12545:40;;;:::o;12591:169::-;12675:11;12709:6;12704:3;12697:19;12749:4;12744:3;12740:14;12725:29;;12687:73;;;;:::o;12766:305::-;12806:3;12825:20;12843:1;12825:20;:::i;:::-;12820:25;;12859:20;12877:1;12859:20;:::i;:::-;12854:25;;13013:1;12945:66;12941:74;12938:1;12935:81;12932:2;;;13019:18;;:::i;:::-;12932:2;13063:1;13060;13056:9;13049:16;;12810:261;;;;:::o;13077:191::-;13117:4;13137:20;13155:1;13137:20;:::i;:::-;13132:25;;13171:20;13189:1;13171:20;:::i;:::-;13166:25;;13210:1;13207;13204:8;13201:2;;;13215:18;;:::i;:::-;13201:2;13260:1;13257;13253:9;13245:17;;13122:146;;;;:::o;13274:96::-;13311:7;13340:24;13358:5;13340:24;:::i;:::-;13329:35;;13319:51;;;:::o;13376:104::-;13421:7;13450:24;13468:5;13450:24;:::i;:::-;13439:35;;13429:51;;;:::o;13486:90::-;13520:7;13563:5;13556:13;13549:21;13538:32;;13528:48;;;:::o;13582:127::-;13627:7;13656:5;13645:16;;13662:41;13697:5;13662:41;:::i;:::-;13635:74;;;:::o;13715:126::-;13752:7;13792:42;13785:5;13781:54;13770:65;;13760:81;;;:::o;13847:77::-;13884:7;13913:5;13902:16;;13892:32;;;:::o;13930:127::-;13986:9;14019:32;14045:5;14019:32;:::i;:::-;14006:45;;13996:61;;;:::o;14063:307::-;14131:1;14141:113;14155:6;14152:1;14149:13;14141:113;;;14240:1;14235:3;14231:11;14225:18;14221:1;14216:3;14212:11;14205:39;14177:2;14174:1;14170:10;14165:15;;14141:113;;;14272:6;14269:1;14266:13;14263:2;;;14352:1;14343:6;14338:3;14334:16;14327:27;14263:2;14112:258;;;;:::o;14376:320::-;14420:6;14457:1;14451:4;14447:12;14437:22;;14504:1;14498:4;14494:12;14525:18;14515:2;;14581:4;14573:6;14569:17;14559:27;;14515:2;14643;14635:6;14632:14;14612:18;14609:38;14606:2;;;14662:18;;:::i;:::-;14606:2;14427:269;;;;:::o;14702:233::-;14741:3;14764:24;14782:5;14764:24;:::i;:::-;14755:33;;14810:66;14803:5;14800:77;14797:2;;;14880:18;;:::i;:::-;14797:2;14927:1;14920:5;14916:13;14909:20;;14745:190;;;:::o;14941:180::-;14989:77;14986:1;14979:88;15086:4;15083:1;15076:15;15110:4;15107:1;15100:15;15127:180;15175:77;15172:1;15165:88;15272:4;15269:1;15262:15;15296:4;15293:1;15286:15;15313:180;15361:77;15358:1;15351:88;15458:4;15455:1;15448:15;15482:4;15479:1;15472:15;15499:117;15608:1;15605;15598:12;15622:117;15731:1;15728;15721:12;15745:117;15854:1;15851;15844:12;15868:117;15977:1;15974;15967:12;15991:117;16100:1;16097;16090:12;16114:102;16155:6;16206:2;16202:7;16197:2;16190:5;16186:14;16182:28;16172:38;;16162:54;;;:::o;16222:172::-;16362:24;16358:1;16350:6;16346:14;16339:48;16328:66;:::o;16400:171::-;16540:23;16536:1;16528:6;16524:14;16517:47;16506:65;:::o;16577:160::-;16717:12;16713:1;16705:6;16701:14;16694:36;16683:54;:::o;16743:166::-;16883:18;16879:1;16871:6;16867:14;16860:42;16849:60;:::o;16915:180::-;17055:32;17051:1;17043:6;17039:14;17032:56;17021:74;:::o;17101:168::-;17241:20;17237:1;17229:6;17225:14;17218:44;17207:62;:::o;17275:228::-;17415:34;17411:1;17403:6;17399:14;17392:58;17484:11;17479:2;17471:6;17467:15;17460:36;17381:122;:::o;17509:166::-;17649:18;17645:1;17637:6;17633:14;17626:42;17615:60;:::o;17681:172::-;17821:24;17817:1;17809:6;17805:14;17798:48;17787:66;:::o;17859:113::-;17940:1;17933:5;17930:12;17920:2;;17946:18;;:::i;:::-;17920:2;17910:62;:::o;17978:122::-;18051:24;18069:5;18051:24;:::i;:::-;18044:5;18041:35;18031:2;;18090:1;18087;18080:12;18031:2;18021:79;:::o;18106:122::-;18179:24;18197:5;18179:24;:::i;:::-;18172:5;18169:35;18159:2;;18218:1;18215;18208:12;18159:2;18149:79;:::o",
  "source": "pragma solidity ^0.8.5;\r\n\r\ncontract Market {\r\n    enum Status { //used both for Trade and Offer. For Trade 'DONE' means settled, and for\r\n        PENDING,  // Offer it means the offer was taken already.\r\n        DONE\r\n    }\r\n    struct Trade {\r\n        uint id;\r\n        uint offerId;\r\n        address payable buyer;\r\n        address payable seller;\r\n        uint price;\r\n        Status status;\r\n    }\r\n    struct Offer {\r\n        uint id;\r\n        address payable seller;\r\n        string description;\r\n        uint price;\r\n        Status status;\r\n    }\r\n    mapping(uint => Trade) public trades;\r\n    mapping(uint => Offer) public offers;\r\n    mapping(address => uint) public balances;\r\n    mapping(address => uint) public availableBalances; //take into consideration pending trades\r\n    mapping(address => bool) public members;\r\n    address payable admin;\r\n    \r\n    uint lastOfferId = 1;\r\n    uint lastTradeId = 1;\r\n    \r\n    constructor() {\r\n        admin = payable(msg.sender);\r\n    }\r\n    \r\n    /*\r\n     * Members functions\r\n     */\r\n    \r\n    // called by seller\r\n    function sell(string calldata description, uint price) \r\n        external \r\n        onlyMember(msg.sender, true) {\r\n        require(price > 0, 'cannot sell free items');\r\n        uint offerId = lastOfferId++;\r\n        offers[offerId] = Offer(\r\n            offerId, \r\n           payable(msg.sender),\r\n            description, \r\n            price, \r\n            Status.PENDING\r\n        );\r\n    }\r\n    \r\n    //called by buyer\r\n    function buy(uint offerId)\r\n        external \r\n        onlyMember(msg.sender, true) {\r\n        Offer storage offer = offers[offerId];\r\n        require(offer.id > 0, 'offer must exist');\r\n        require(offer.status == Status.PENDING, 'offer must be pending');\r\n        require(availableBalances[payable(msg.sender)] >= offer.price);\r\n        availableBalances[payable(msg.sender)] -= offer.price;\r\n        offer.status = Status.DONE;\r\n        uint tradeId = lastTradeId++;\r\n        trades[lastTradeId++] = Trade(\r\n            tradeId, \r\n            offer.id, \r\n           payable(msg.sender),\r\n            offer.seller, \r\n            offer.price,\r\n            Status.PENDING\r\n        );\r\n    }\r\n        \r\n    function deposit() \r\n        external \r\n        payable \r\n        onlyMember(msg.sender, true) {\r\n        balances[msg.sender] += msg.value;\r\n        availableBalances[msg.sender] += msg.value;\r\n    }\r\n    \r\n    /*\r\n     * Admin functions\r\n     */\r\n    \r\n    function settle(uint txId) \r\n        external \r\n        onlyAdmin() {\r\n        Trade storage trade = trades[txId];\r\n        require(trade.id != 0, 'trade must exist');\r\n        require(trade.status == Status.PENDING, 'trade must be in PENDING state');\r\n        trade.status = Status.DONE;\r\n        availableBalances[msg.sender] += trade.price;\r\n        _transfer(trade.buyer, trade.seller, trade.price);\r\n    }\r\n    \r\n    function register(address member) \r\n        external \r\n        onlyMember(member, false)\r\n        onlyAdmin() {\r\n        members[member] = true;\r\n        balances[member] += 500;\r\n        availableBalances[member] += 500;\r\n    }\r\n    \r\n    function unregister(address member) \r\n        external \r\n        onlyMember(member, true)\r\n        onlyAdmin() {\r\n        uint memberBalance = balances[member];\r\n        members[member] = false;\r\n        _transfer(member, address(this), memberBalance);\r\n    }\r\n    \r\n    function _transfer(address from, address to, uint amount) internal {\r\n        require(balances[from] >= amount, 'cannot transfer more than current balance');\r\n        balances[from] -= amount;\r\n        availableBalances[from] -= amount;\r\n        balances[to] += amount;\r\n        availableBalances[to] += amount;\r\n    }\r\n    \r\n    //Can send ether to smart contract\r\n     receive() external payable {}\r\n    \r\n    modifier onlyMember(address member, bool registered) {\r\n        if(registered) {\r\n            require(members[member] == true, 'must be registered');\r\n        } else {\r\n            require(members[member] == false, 'must NOT be registered');\r\n        }\r\n        _;\r\n    }\r\n    \r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, 'only admin');\r\n        _;\r\n    }\r\n}",
  "sourcePath": "E:/ebay/contracts/Ebay-alternative.sol",
  "ast": {
    "absolutePath": "/E/ebay/contracts/Ebay-alternative.sol",
    "exportedSymbols": {
      "Market": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441
        ],
        "name": "Market",
        "nameLocation": "36:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Market.Status",
            "id": 4,
            "members": [
              {
                "id": 2,
                "name": "PENDING",
                "nameLocation": "146:7:0",
                "nodeType": "EnumValue",
                "src": "146:7:0"
              },
              {
                "id": 3,
                "name": "DONE",
                "nameLocation": "212:4:0",
                "nodeType": "EnumValue",
                "src": "212:4:0"
              }
            ],
            "name": "Status",
            "nameLocation": "55:6:0",
            "nodeType": "EnumDefinition",
            "src": "50:173:0"
          },
          {
            "canonicalName": "Market.Trade",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "258:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "253:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "253:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "276:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "271:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "310:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "294:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "342:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "326:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "364:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "359:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "387:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "380:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$4",
                  "typeString": "enum Market.Status"
                },
                "typeName": {
                  "id": 16,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 15,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4,
                    "src": "380:6:0"
                  },
                  "referencedDeclaration": 4,
                  "src": "380:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$4",
                    "typeString": "enum Market.Status"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nameLocation": "236:5:0",
            "nodeType": "StructDefinition",
            "scope": 441,
            "src": "229:172:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Market.Offer",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "436:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "431:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "431:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "465:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "449:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "449:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "489:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "482:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 23,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "482:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "516:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "511:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "511:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "539:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "532:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$4",
                  "typeString": "enum Market.Status"
                },
                "typeName": {
                  "id": 28,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 27,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4,
                    "src": "532:6:0"
                  },
                  "referencedDeclaration": 4,
                  "src": "532:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$4",
                    "typeString": "enum Market.Status"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Offer",
            "nameLocation": "414:5:0",
            "nodeType": "StructDefinition",
            "scope": 441,
            "src": "407:146:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e6c598e",
            "id": 35,
            "mutability": "mutable",
            "name": "trades",
            "nameLocation": "589:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "559:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$18_storage_$",
              "typeString": "mapping(uint256 => struct Market.Trade)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 31,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "567:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "559:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$18_storage_$",
                "typeString": "mapping(uint256 => struct Market.Trade)"
              },
              "valueType": {
                "id": 33,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "575:5:0"
                },
                "referencedDeclaration": 18,
                "src": "575:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                  "typeString": "struct Market.Trade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a72ea6a",
            "id": 40,
            "mutability": "mutable",
            "name": "offers",
            "nameLocation": "632:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "602:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Offer_$30_storage_$",
              "typeString": "mapping(uint256 => struct Market.Offer)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 36,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "610:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "602:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Offer_$30_storage_$",
                "typeString": "mapping(uint256 => struct Market.Offer)"
              },
              "valueType": {
                "id": 38,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 37,
                  "name": "Offer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "618:5:0"
                },
                "referencedDeclaration": 30,
                "src": "618:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                  "typeString": "struct Market.Offer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 44,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "677:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "645:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "653:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "645:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 42,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "664:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc3774b3",
            "id": 48,
            "mutability": "mutable",
            "name": "availableBalances",
            "nameLocation": "724:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "692:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "700:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "692:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 46,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "711:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ae4b0c",
            "id": 52,
            "mutability": "mutable",
            "name": "members",
            "nameLocation": "821:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "789:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "797:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "789:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 50,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "808:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "851:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "835:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 53,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "835:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "lastOfferId",
            "nameLocation": "874:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "869:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 55,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "869:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "888:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "lastTradeId",
            "nameLocation": "901:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "896:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "896:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "915:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "943:46:0",
              "statements": [
                {
                  "expression": {
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "954:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 66,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "970:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "970:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "962:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "962:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "962:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "954:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "954:27:0"
                }
              ]
            },
            "id": 72,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:0"
            },
            "scope": 441,
            "src": "929:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1188:280:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "1207:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1215:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1207:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742073656c6c2066726565206974656d73",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026",
                          "typeString": "literal_string \"cannot sell free items\""
                        },
                        "value": "cannot sell free items"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026",
                          "typeString": "literal_string \"cannot sell free items\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1199:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1199:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:44:0"
                },
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "offerId",
                      "nameLocation": "1259:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "1254:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1254:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1269:13:0",
                    "subExpression": {
                      "id": 93,
                      "name": "lastOfferId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1269:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1254:28:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 96,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "1293:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Offer_$30_storage_$",
                          "typeString": "mapping(uint256 => struct Market.Offer storage ref)"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "id": 97,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1300:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1293:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$30_storage",
                        "typeString": "struct Market.Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100,
                          "name": "offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "1331:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 103,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1361:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1361:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1353:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 101,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1353:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1353:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 106,
                          "name": "description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "1387:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 107,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "1414:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 108,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "1435:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                              "typeString": "type(enum Market.Status)"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "1435:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        ],
                        "id": 99,
                        "name": "Offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1311:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Offer_$30_storage_ptr_$",
                          "typeString": "type(struct Market.Offer storage pointer)"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1311:149:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$30_memory_ptr",
                        "typeString": "struct Market.Offer memory"
                      }
                    },
                    "src": "1293:167:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$30_storage",
                      "typeString": "struct Market.Offer storage ref"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:167:0"
                }
              ]
            },
            "functionSelector": "9f656321",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 79,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1170:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1170:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1182:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 82,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "1159:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1159:28:0"
              }
            ],
            "name": "sell",
            "nameLocation": "1084:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1105:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1089:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1123:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1118:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1088:41:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:0:0"
            },
            "scope": 441,
            "src": "1075:393:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "1587:610:0",
              "statements": [
                {
                  "assignments": [
                    126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "1612:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 206,
                      "src": "1598:19:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                        "typeString": "struct Market.Offer"
                      },
                      "typeName": {
                        "id": 125,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 124,
                          "name": "Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30,
                          "src": "1598:5:0"
                        },
                        "referencedDeclaration": 30,
                        "src": "1598:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                          "typeString": "struct Market.Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "baseExpression": {
                      "id": 127,
                      "name": "offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1620:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Offer_$30_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Offer storage ref)"
                      }
                    },
                    "id": 129,
                    "indexExpression": {
                      "id": 128,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1627:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1620:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$30_storage",
                      "typeString": "struct Market.Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1598:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 132,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1654:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "1654:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1665:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1654:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f66666572206d757374206578697374",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1668:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce",
                          "typeString": "literal_string \"offer must exist\""
                        },
                        "value": "offer must exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce",
                          "typeString": "literal_string \"offer must exist\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1646:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1646:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$4",
                          "typeString": "enum Market.Status"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 140,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1706:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "1706:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 142,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "1722:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                              "typeString": "type(enum Market.Status)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "1722:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        },
                        "src": "1706:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f66666572206d7573742062652070656e64696e67",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1738:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625",
                          "typeString": "literal_string \"offer must be pending\""
                        },
                        "value": "offer must be pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625",
                          "typeString": "literal_string \"offer must be pending\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1698:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 149,
                            "name": "availableBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "1781:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 155,
                          "indexExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 152,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1807:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1807:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1799:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 150,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1799:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1799:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1781:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 156,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1823:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "1823:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1781:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:62:0"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 161,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1846:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 167,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 164,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1872:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1872:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1864:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1864:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1864:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1846:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 168,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1888:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                          "typeString": "struct Market.Offer storage pointer"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "1888:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1846:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:53:0"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 172,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1910:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                          "typeString": "struct Market.Offer storage pointer"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "1910:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$4",
                        "typeString": "enum Market.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1925:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                          "typeString": "type(enum Market.Status)"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DONE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "1925:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$4",
                        "typeString": "enum Market.Status"
                      }
                    },
                    "src": "1910:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$4",
                      "typeString": "enum Market.Status"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:26:0"
                },
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "tradeId",
                      "nameLocation": "1952:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 206,
                      "src": "1947:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1947:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 183,
                  "initialValue": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1962:13:0",
                    "subExpression": {
                      "id": 181,
                      "name": "lastTradeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1962:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:28:0"
                },
                {
                  "expression": {
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 184,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1986:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$18_storage_$",
                          "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                        }
                      },
                      "id": 187,
                      "indexExpression": {
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1993:13:0",
                        "subExpression": {
                          "id": 185,
                          "name": "lastTradeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1993:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1986:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$18_storage",
                        "typeString": "struct Market.Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 189,
                          "name": "tradeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2030:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 190,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2053:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "2053:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 194,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2084:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2084:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2076:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 192,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2076:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2076:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 197,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2110:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "2110:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 199,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2138:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "2138:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 201,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "2164:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                              "typeString": "type(enum Market.Status)"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "2164:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        ],
                        "id": 188,
                        "name": "Trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2010:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trade_$18_storage_ptr_$",
                          "typeString": "type(struct Market.Trade storage pointer)"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2010:179:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$18_memory_ptr",
                        "typeString": "struct Market.Trade memory"
                      }
                    },
                    "src": "1986:203:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$18_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:203:0"
                }
              ]
            },
            "functionSelector": "d96a094a",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 119,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1569:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1569:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1581:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 118,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "1558:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1558:28:0"
              }
            ],
            "name": "buy",
            "nameLocation": "1512:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "1521:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1516:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1515:14:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:0:0"
            },
            "scope": 441,
            "src": "1503:694:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "2308:105:0",
              "statements": [
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 215,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2319:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 218,
                      "indexExpression": {
                        "expression": {
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2328:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2328:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2319:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2343:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2343:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2319:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2319:33:0"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 223,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2363:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "expression": {
                          "id": 224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2381:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2381:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2363:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 227,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2396:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2396:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2363:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:42:0"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 210,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2290:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2290:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2302:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 209,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "2279:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2279:28:0"
              }
            ],
            "name": "deposit",
            "nameLocation": "2222:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2229:2:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2308:0:0"
            },
            "scope": 441,
            "src": "2213:200:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "2540:342:0",
              "statements": [
                {
                  "assignments": [
                    241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 241,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2565:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 287,
                      "src": "2551:19:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                        "typeString": "struct Market.Trade"
                      },
                      "typeName": {
                        "id": 240,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 239,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 18,
                          "src": "2551:5:0"
                        },
                        "referencedDeclaration": 18,
                        "src": "2551:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                          "typeString": "struct Market.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "baseExpression": {
                      "id": 242,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2573:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$18_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                      }
                    },
                    "id": 244,
                    "indexExpression": {
                      "id": 243,
                      "name": "txId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "2580:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2573:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$18_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2551:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 247,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "2604:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "2604:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2616:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2604:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616465206d757374206578697374",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2619:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d",
                          "typeString": "literal_string \"trade must exist\""
                        },
                        "value": "trade must exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d",
                          "typeString": "literal_string \"trade must exist\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2596:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2596:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2596:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$4",
                          "typeString": "enum Market.Status"
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 255,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "2657:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "2657:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 257,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "2673:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                              "typeString": "type(enum Market.Status)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "2673:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        },
                        "src": "2657:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616465206d75737420626520696e2050454e44494e47207374617465",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2689:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21",
                          "typeString": "literal_string \"trade must be in PENDING state\""
                        },
                        "value": "trade must be in PENDING state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21",
                          "typeString": "literal_string \"trade must be in PENDING state\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2649:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:73:0"
                },
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 263,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "2733:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 265,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2733:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$4",
                        "typeString": "enum Market.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 266,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "2748:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                          "typeString": "type(enum Market.Status)"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DONE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "2748:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$4",
                        "typeString": "enum Market.Status"
                      }
                    },
                    "src": "2733:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$4",
                      "typeString": "enum Market.Status"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "2733:26:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 270,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2770:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "expression": {
                          "id": 271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2788:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2788:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2770:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 274,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "2803:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2803:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2770:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 279,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "2835:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "2835:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 281,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "2848:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "2848:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 283,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "2862:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "2862:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 278,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "2825:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:49:0"
                }
              ]
            },
            "functionSelector": "8df82800",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 237,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 236,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 440,
                  "src": "2528:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2528:11:0"
              }
            ],
            "name": "settle",
            "nameLocation": "2481:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "txId",
                  "nameLocation": "2493:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2488:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2487:11:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2540:0:0"
            },
            "scope": 441,
            "src": "2472:410:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3004:118:0",
              "statements": [
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 299,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3015:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 301,
                      "indexExpression": {
                        "id": 300,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3023:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3015:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3033:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3015:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3015:22:0"
                },
                {
                  "expression": {
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 305,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3048:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 307,
                      "indexExpression": {
                        "id": 306,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3057:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3048:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "353030",
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3068:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500_by_1",
                        "typeString": "int_const 500"
                      },
                      "value": "500"
                    },
                    "src": "3048:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:23:0"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 311,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3082:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 313,
                      "indexExpression": {
                        "id": 312,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3100:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3082:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "353030",
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3111:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500_by_1",
                        "typeString": "int_const 500"
                      },
                      "value": "500"
                    },
                    "src": "3082:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "3082:32:0"
                }
              ]
            },
            "functionSelector": "4420e486",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 293,
                    "name": "member",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 290,
                    "src": "2968:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "66616c7365",
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2976:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 295,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 292,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "2957:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2957:25:0"
              },
              {
                "arguments": [],
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 440,
                  "src": "2992:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2992:11:0"
              }
            ],
            "name": "register",
            "nameLocation": "2903:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "2920:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2912:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2911:16:0"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3004:0:0"
            },
            "scope": 441,
            "src": "2894:228:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "3245:148:0",
              "statements": [
                {
                  "assignments": [
                    330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 330,
                      "mutability": "mutable",
                      "name": "memberBalance",
                      "nameLocation": "3261:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 350,
                      "src": "3256:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 329,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3256:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 334,
                  "initialValue": {
                    "baseExpression": {
                      "id": 331,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "3277:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 333,
                    "indexExpression": {
                      "id": 332,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "3286:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3277:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3256:37:0"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 335,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3304:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 337,
                      "indexExpression": {
                        "id": 336,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3312:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3304:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3322:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3304:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:23:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3348:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 345,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3364:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$441",
                              "typeString": "contract Market"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Market_$441",
                              "typeString": "contract Market"
                            }
                          ],
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3356:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3356:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3356:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 347,
                        "name": "memberBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "3371:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 341,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "3338:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:47:0"
                }
              ]
            },
            "functionSelector": "2ec2c246",
            "id": 351,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 323,
                    "name": "member",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 320,
                    "src": "3210:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3218:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 325,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 322,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "3199:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3199:24:0"
              },
              {
                "arguments": [],
                "id": 327,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 326,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 440,
                  "src": "3233:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3233:11:0"
              }
            ],
            "name": "unregister",
            "nameLocation": "3143:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3162:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "3154:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3154:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3153:16:0"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3245:0:0"
            },
            "scope": 441,
            "src": "3134:259:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "3472:251:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 361,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "3491:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 363,
                          "indexExpression": {
                            "id": 362,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "3500:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3491:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 364,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "3509:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3491:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74207472616e73666572206d6f7265207468616e2063757272656e742062616c616e6365",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3517:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a",
                          "typeString": "literal_string \"cannot transfer more than current balance\""
                        },
                        "value": "cannot transfer more than current balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a",
                          "typeString": "literal_string \"cannot transfer more than current balance\""
                        }
                      ],
                      "id": 360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:78:0"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 369,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3572:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 371,
                      "indexExpression": {
                        "id": 370,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3581:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3572:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 372,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3590:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3572:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:24:0"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 375,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3607:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 377,
                      "indexExpression": {
                        "id": 376,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3625:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3607:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 378,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3634:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3607:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:33:0"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 381,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3651:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 383,
                      "indexExpression": {
                        "id": 382,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3660:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3651:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 384,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3667:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3651:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:22:0"
                },
                {
                  "expression": {
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 387,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3684:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 389,
                      "indexExpression": {
                        "id": 388,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3702:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3684:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 390,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3709:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3684:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:31:0"
                }
              ]
            },
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "3414:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3432:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "3424:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3446:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "3438:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3455:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "3450:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3423:39:0"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3472:0:0"
            },
            "scope": 441,
            "src": "3405:318:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "3803:2:0",
              "statements": []
            },
            "id": 398,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3783:2:0"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3803:0:0"
            },
            "scope": 441,
            "src": "3776:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "3870:218:0",
              "statements": [
                {
                  "condition": {
                    "id": 404,
                    "name": "registered",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 402,
                    "src": "3884:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "3983:86:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 416,
                                  "name": "members",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52,
                                  "src": "4006:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 418,
                                "indexExpression": {
                                  "id": 417,
                                  "name": "member",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "4014:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4006:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4025:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "4006:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d757374204e4f542062652072656769737465726564",
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4032:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa",
                                "typeString": "literal_string \"must NOT be registered\""
                              },
                              "value": "must NOT be registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa",
                                "typeString": "literal_string \"must NOT be registered\""
                              }
                            ],
                            "id": 415,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3998:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3998:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "3998:59:0"
                      }
                    ]
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "3881:188:0",
                  "trueBody": {
                    "id": 414,
                    "nodeType": "Block",
                    "src": "3896:81:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 406,
                                  "name": "members",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52,
                                  "src": "3919:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 408,
                                "indexExpression": {
                                  "id": 407,
                                  "name": "member",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "3927:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3919:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3938:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "3919:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d7573742062652072656769737465726564",
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3944:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18",
                                "typeString": "literal_string \"must be registered\""
                              },
                              "value": "must be registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18",
                                "typeString": "literal_string \"must be registered\""
                              }
                            ],
                            "id": 405,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3911:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3911:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 413,
                        "nodeType": "ExpressionStatement",
                        "src": "3911:54:0"
                      }
                    ]
                  }
                },
                {
                  "id": 426,
                  "nodeType": "PlaceholderStatement",
                  "src": "4079:1:0"
                }
              ]
            },
            "id": 428,
            "name": "onlyMember",
            "nameLocation": "3826:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3845:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "3837:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "registered",
                  "nameLocation": "3858:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "3853:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3836:33:0"
            },
            "src": "3817:271:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "4121:73:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 431,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4140:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4140:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 433,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "4154:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4140:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792061646d696e",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4161:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        },
                        "value": "only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        }
                      ],
                      "id": 430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4132:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4132:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:42:0"
                },
                {
                  "id": 438,
                  "nodeType": "PlaceholderStatement",
                  "src": "4185:1:0"
                }
              ]
            },
            "id": 440,
            "name": "onlyAdmin",
            "nameLocation": "4109:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4118:2:0"
            },
            "src": "4100:94:0",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 442,
        "src": "27:4170:0",
        "usedErrors": []
      }
    ],
    "src": "0:4197:0"
  },
  "legacyAST": {
    "absolutePath": "/E/ebay/contracts/Ebay-alternative.sol",
    "exportedSymbols": {
      "Market": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441
        ],
        "name": "Market",
        "nameLocation": "36:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Market.Status",
            "id": 4,
            "members": [
              {
                "id": 2,
                "name": "PENDING",
                "nameLocation": "146:7:0",
                "nodeType": "EnumValue",
                "src": "146:7:0"
              },
              {
                "id": 3,
                "name": "DONE",
                "nameLocation": "212:4:0",
                "nodeType": "EnumValue",
                "src": "212:4:0"
              }
            ],
            "name": "Status",
            "nameLocation": "55:6:0",
            "nodeType": "EnumDefinition",
            "src": "50:173:0"
          },
          {
            "canonicalName": "Market.Trade",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "258:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "253:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "253:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "offerId",
                "nameLocation": "276:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "271:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "310:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "294:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "342:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "326:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "364:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "359:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "387:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "380:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$4",
                  "typeString": "enum Market.Status"
                },
                "typeName": {
                  "id": 16,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 15,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4,
                    "src": "380:6:0"
                  },
                  "referencedDeclaration": 4,
                  "src": "380:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$4",
                    "typeString": "enum Market.Status"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nameLocation": "236:5:0",
            "nodeType": "StructDefinition",
            "scope": 441,
            "src": "229:172:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Market.Offer",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "436:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "431:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "431:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "465:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "449:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "449:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "489:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "482:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 23,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "482:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "516:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "511:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "511:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "539:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 30,
                "src": "532:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$4",
                  "typeString": "enum Market.Status"
                },
                "typeName": {
                  "id": 28,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 27,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4,
                    "src": "532:6:0"
                  },
                  "referencedDeclaration": 4,
                  "src": "532:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$4",
                    "typeString": "enum Market.Status"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Offer",
            "nameLocation": "414:5:0",
            "nodeType": "StructDefinition",
            "scope": 441,
            "src": "407:146:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e6c598e",
            "id": 35,
            "mutability": "mutable",
            "name": "trades",
            "nameLocation": "589:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "559:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$18_storage_$",
              "typeString": "mapping(uint256 => struct Market.Trade)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 31,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "567:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "559:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$18_storage_$",
                "typeString": "mapping(uint256 => struct Market.Trade)"
              },
              "valueType": {
                "id": 33,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 32,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 18,
                  "src": "575:5:0"
                },
                "referencedDeclaration": 18,
                "src": "575:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                  "typeString": "struct Market.Trade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a72ea6a",
            "id": 40,
            "mutability": "mutable",
            "name": "offers",
            "nameLocation": "632:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "602:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Offer_$30_storage_$",
              "typeString": "mapping(uint256 => struct Market.Offer)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 36,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "610:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "602:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Offer_$30_storage_$",
                "typeString": "mapping(uint256 => struct Market.Offer)"
              },
              "valueType": {
                "id": 38,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 37,
                  "name": "Offer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "618:5:0"
                },
                "referencedDeclaration": 30,
                "src": "618:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                  "typeString": "struct Market.Offer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 44,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "677:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "645:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "653:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "645:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 42,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "664:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc3774b3",
            "id": 48,
            "mutability": "mutable",
            "name": "availableBalances",
            "nameLocation": "724:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "692:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "700:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "692:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 46,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "711:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08ae4b0c",
            "id": 52,
            "mutability": "mutable",
            "name": "members",
            "nameLocation": "821:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "789:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "797:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "789:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 50,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "808:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "851:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "835:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 53,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "835:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "lastOfferId",
            "nameLocation": "874:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "869:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 55,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "869:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 56,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "888:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "lastTradeId",
            "nameLocation": "901:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "896:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "896:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "915:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "943:46:0",
              "statements": [
                {
                  "expression": {
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "954:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 66,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "970:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "970:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "962:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "962:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "962:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "954:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "954:27:0"
                }
              ]
            },
            "id": 72,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:0"
            },
            "scope": 441,
            "src": "929:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1188:280:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "1207:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1215:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1207:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742073656c6c2066726565206974656d73",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026",
                          "typeString": "literal_string \"cannot sell free items\""
                        },
                        "value": "cannot sell free items"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f251645483e6d6a8fd2b5bdb4822929dda062fe0598a094e19b829f3809aa026",
                          "typeString": "literal_string \"cannot sell free items\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1199:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1199:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:44:0"
                },
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "offerId",
                      "nameLocation": "1259:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "1254:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1254:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 95,
                  "initialValue": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1269:13:0",
                    "subExpression": {
                      "id": 93,
                      "name": "lastOfferId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1269:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1254:28:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 96,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "1293:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Offer_$30_storage_$",
                          "typeString": "mapping(uint256 => struct Market.Offer storage ref)"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "id": 97,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1300:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1293:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$30_storage",
                        "typeString": "struct Market.Offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100,
                          "name": "offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "1331:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 103,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1361:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1361:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1353:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 101,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1353:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1353:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 106,
                          "name": "description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "1387:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 107,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "1414:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 108,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "1435:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                              "typeString": "type(enum Market.Status)"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "1435:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        ],
                        "id": 99,
                        "name": "Offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1311:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Offer_$30_storage_ptr_$",
                          "typeString": "type(struct Market.Offer storage pointer)"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1311:149:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$30_memory_ptr",
                        "typeString": "struct Market.Offer memory"
                      }
                    },
                    "src": "1293:167:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$30_storage",
                      "typeString": "struct Market.Offer storage ref"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:167:0"
                }
              ]
            },
            "functionSelector": "9f656321",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 79,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1170:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1170:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1182:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 82,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "1159:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1159:28:0"
              }
            ],
            "name": "sell",
            "nameLocation": "1084:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1105:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1089:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1123:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "1118:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1088:41:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:0:0"
            },
            "scope": 441,
            "src": "1075:393:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "1587:610:0",
              "statements": [
                {
                  "assignments": [
                    126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "1612:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 206,
                      "src": "1598:19:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                        "typeString": "struct Market.Offer"
                      },
                      "typeName": {
                        "id": 125,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 124,
                          "name": "Offer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30,
                          "src": "1598:5:0"
                        },
                        "referencedDeclaration": 30,
                        "src": "1598:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                          "typeString": "struct Market.Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "baseExpression": {
                      "id": 127,
                      "name": "offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1620:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Offer_$30_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Offer storage ref)"
                      }
                    },
                    "id": 129,
                    "indexExpression": {
                      "id": 128,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1627:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1620:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$30_storage",
                      "typeString": "struct Market.Offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1598:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 132,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1654:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "1654:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1665:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1654:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f66666572206d757374206578697374",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1668:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce",
                          "typeString": "literal_string \"offer must exist\""
                        },
                        "value": "offer must exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55db919d1513ff99cb94aadd99c9c16e89e78ab2ac223d7e52e07eae25482cce",
                          "typeString": "literal_string \"offer must exist\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1646:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1646:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$4",
                          "typeString": "enum Market.Status"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 140,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1706:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "1706:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 142,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "1722:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                              "typeString": "type(enum Market.Status)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "1722:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        },
                        "src": "1706:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f66666572206d7573742062652070656e64696e67",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1738:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625",
                          "typeString": "literal_string \"offer must be pending\""
                        },
                        "value": "offer must be pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36c2ceb7e27975b1a008ba63d11cb8b9eb782e47c668a30ed7c711a3a53a2625",
                          "typeString": "literal_string \"offer must be pending\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1698:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1698:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 149,
                            "name": "availableBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "1781:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 155,
                          "indexExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 152,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1807:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1807:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1799:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 150,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1799:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1799:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1781:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 156,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1823:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "1823:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1781:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:62:0"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 161,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1846:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 167,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 164,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1872:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1872:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1864:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1864:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1864:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1846:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 168,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1888:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                          "typeString": "struct Market.Offer storage pointer"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "1888:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1846:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "1846:53:0"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 172,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1910:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                          "typeString": "struct Market.Offer storage pointer"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "1910:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$4",
                        "typeString": "enum Market.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "1925:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                          "typeString": "type(enum Market.Status)"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DONE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "1925:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$4",
                        "typeString": "enum Market.Status"
                      }
                    },
                    "src": "1910:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$4",
                      "typeString": "enum Market.Status"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:26:0"
                },
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "tradeId",
                      "nameLocation": "1952:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 206,
                      "src": "1947:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1947:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 183,
                  "initialValue": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1962:13:0",
                    "subExpression": {
                      "id": 181,
                      "name": "lastTradeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "1962:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:28:0"
                },
                {
                  "expression": {
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 184,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1986:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$18_storage_$",
                          "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                        }
                      },
                      "id": 187,
                      "indexExpression": {
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1993:13:0",
                        "subExpression": {
                          "id": 185,
                          "name": "lastTradeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1993:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1986:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$18_storage",
                        "typeString": "struct Market.Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 189,
                          "name": "tradeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2030:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 190,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2053:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "2053:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 194,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2084:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2084:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2076:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 192,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2076:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2076:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 197,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2110:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "2110:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 199,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2138:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$30_storage_ptr",
                              "typeString": "struct Market.Offer storage pointer"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "2138:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 201,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "2164:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                              "typeString": "type(enum Market.Status)"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "2164:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        ],
                        "id": 188,
                        "name": "Trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2010:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trade_$18_storage_ptr_$",
                          "typeString": "type(struct Market.Trade storage pointer)"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2010:179:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$18_memory_ptr",
                        "typeString": "struct Market.Trade memory"
                      }
                    },
                    "src": "1986:203:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$18_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:203:0"
                }
              ]
            },
            "functionSelector": "d96a094a",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 119,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1569:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1569:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1581:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 118,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "1558:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1558:28:0"
              }
            ],
            "name": "buy",
            "nameLocation": "1512:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "1521:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1516:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1515:14:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:0:0"
            },
            "scope": 441,
            "src": "1503:694:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "2308:105:0",
              "statements": [
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 215,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2319:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 218,
                      "indexExpression": {
                        "expression": {
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2328:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2328:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2319:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2343:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2343:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2319:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2319:33:0"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 223,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2363:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "expression": {
                          "id": 224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2381:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2381:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2363:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 227,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2396:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2396:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2363:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:42:0"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 210,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2290:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2290:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2302:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 209,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "2279:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2279:28:0"
              }
            ],
            "name": "deposit",
            "nameLocation": "2222:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2229:2:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2308:0:0"
            },
            "scope": 441,
            "src": "2213:200:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "2540:342:0",
              "statements": [
                {
                  "assignments": [
                    241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 241,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2565:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 287,
                      "src": "2551:19:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                        "typeString": "struct Market.Trade"
                      },
                      "typeName": {
                        "id": 240,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 239,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 18,
                          "src": "2551:5:0"
                        },
                        "referencedDeclaration": 18,
                        "src": "2551:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                          "typeString": "struct Market.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "baseExpression": {
                      "id": 242,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2573:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$18_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Trade storage ref)"
                      }
                    },
                    "id": 244,
                    "indexExpression": {
                      "id": 243,
                      "name": "txId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "2580:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2573:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$18_storage",
                      "typeString": "struct Market.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2551:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 247,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "2604:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "2604:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2616:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2604:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616465206d757374206578697374",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2619:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d",
                          "typeString": "literal_string \"trade must exist\""
                        },
                        "value": "trade must exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebe54be0550110de287e92489ab632d24d69f2cdb58723c86b27ee2cae061f6d",
                          "typeString": "literal_string \"trade must exist\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2596:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2596:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2596:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$4",
                          "typeString": "enum Market.Status"
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 255,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "2657:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                              "typeString": "struct Market.Trade storage pointer"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "2657:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 257,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "2673:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                              "typeString": "type(enum Market.Status)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2,
                          "src": "2673:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$4",
                            "typeString": "enum Market.Status"
                          }
                        },
                        "src": "2657:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616465206d75737420626520696e2050454e44494e47207374617465",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2689:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21",
                          "typeString": "literal_string \"trade must be in PENDING state\""
                        },
                        "value": "trade must be in PENDING state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_854c89291695786ab18f8e86e151455e7b24661d2e60eebc4095ee2803afeb21",
                          "typeString": "literal_string \"trade must be in PENDING state\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2649:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:73:0"
                },
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 263,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "2733:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 265,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2733:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$4",
                        "typeString": "enum Market.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 266,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "2748:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$4_$",
                          "typeString": "type(enum Market.Status)"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DONE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "2748:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$4",
                        "typeString": "enum Market.Status"
                      }
                    },
                    "src": "2733:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$4",
                      "typeString": "enum Market.Status"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "2733:26:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 270,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2770:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "expression": {
                          "id": 271,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2788:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2788:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2770:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 274,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "2803:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                          "typeString": "struct Market.Trade storage pointer"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2803:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2770:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 279,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "2835:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "2835:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 281,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "2848:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12,
                        "src": "2848:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 283,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "2862:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$18_storage_ptr",
                            "typeString": "struct Market.Trade storage pointer"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "2862:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 278,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "2825:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:49:0"
                }
              ]
            },
            "functionSelector": "8df82800",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 237,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 236,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 440,
                  "src": "2528:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2528:11:0"
              }
            ],
            "name": "settle",
            "nameLocation": "2481:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "txId",
                  "nameLocation": "2493:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 288,
                  "src": "2488:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2487:11:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2540:0:0"
            },
            "scope": 441,
            "src": "2472:410:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3004:118:0",
              "statements": [
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 299,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3015:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 301,
                      "indexExpression": {
                        "id": 300,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3023:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3015:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3033:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3015:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3015:22:0"
                },
                {
                  "expression": {
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 305,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3048:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 307,
                      "indexExpression": {
                        "id": 306,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3057:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3048:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "353030",
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3068:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500_by_1",
                        "typeString": "int_const 500"
                      },
                      "value": "500"
                    },
                    "src": "3048:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:23:0"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 311,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3082:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 313,
                      "indexExpression": {
                        "id": 312,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3100:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3082:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "353030",
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3111:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500_by_1",
                        "typeString": "int_const 500"
                      },
                      "value": "500"
                    },
                    "src": "3082:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "3082:32:0"
                }
              ]
            },
            "functionSelector": "4420e486",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 293,
                    "name": "member",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 290,
                    "src": "2968:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "66616c7365",
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2976:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 295,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 292,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "2957:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2957:25:0"
              },
              {
                "arguments": [],
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 440,
                  "src": "2992:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2992:11:0"
              }
            ],
            "name": "register",
            "nameLocation": "2903:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "2920:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "2912:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2911:16:0"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3004:0:0"
            },
            "scope": 441,
            "src": "2894:228:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "3245:148:0",
              "statements": [
                {
                  "assignments": [
                    330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 330,
                      "mutability": "mutable",
                      "name": "memberBalance",
                      "nameLocation": "3261:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 350,
                      "src": "3256:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 329,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3256:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 334,
                  "initialValue": {
                    "baseExpression": {
                      "id": 331,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "3277:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 333,
                    "indexExpression": {
                      "id": 332,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "3286:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3277:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3256:37:0"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 335,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3304:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 337,
                      "indexExpression": {
                        "id": 336,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3312:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3304:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3322:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3304:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:23:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "3348:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 345,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3364:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$441",
                              "typeString": "contract Market"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Market_$441",
                              "typeString": "contract Market"
                            }
                          ],
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3356:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3356:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3356:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 347,
                        "name": "memberBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "3371:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 341,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "3338:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:47:0"
                }
              ]
            },
            "functionSelector": "2ec2c246",
            "id": 351,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 323,
                    "name": "member",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 320,
                    "src": "3210:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "74727565",
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3218:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 325,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 322,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 428,
                  "src": "3199:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3199:24:0"
              },
              {
                "arguments": [],
                "id": 327,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 326,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 440,
                  "src": "3233:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3233:11:0"
              }
            ],
            "name": "unregister",
            "nameLocation": "3143:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3162:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "3154:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3154:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3153:16:0"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3245:0:0"
            },
            "scope": 441,
            "src": "3134:259:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "3472:251:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 361,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "3491:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 363,
                          "indexExpression": {
                            "id": 362,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "3500:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3491:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 364,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "3509:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3491:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f74207472616e73666572206d6f7265207468616e2063757272656e742062616c616e6365",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3517:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a",
                          "typeString": "literal_string \"cannot transfer more than current balance\""
                        },
                        "value": "cannot transfer more than current balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4aa79b94850ea8fd94cf2f66b5aca9ce80c5ac9fc641f1de662c7b147de417a",
                          "typeString": "literal_string \"cannot transfer more than current balance\""
                        }
                      ],
                      "id": 360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:78:0"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 369,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3572:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 371,
                      "indexExpression": {
                        "id": 370,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3581:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3572:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 372,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3590:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3572:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:24:0"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 375,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3607:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 377,
                      "indexExpression": {
                        "id": 376,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "3625:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3607:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 378,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3634:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3607:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:33:0"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 381,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "3651:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 383,
                      "indexExpression": {
                        "id": 382,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3660:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3651:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 384,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3667:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3651:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:22:0"
                },
                {
                  "expression": {
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 387,
                        "name": "availableBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3684:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 389,
                      "indexExpression": {
                        "id": 388,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3702:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3684:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 390,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "3709:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3684:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:31:0"
                }
              ]
            },
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "3414:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3432:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "3424:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3446:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "3438:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3455:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "3450:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3423:39:0"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3472:0:0"
            },
            "scope": 441,
            "src": "3405:318:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "3803:2:0",
              "statements": []
            },
            "id": 398,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3783:2:0"
            },
            "returnParameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3803:0:0"
            },
            "scope": 441,
            "src": "3776:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "3870:218:0",
              "statements": [
                {
                  "condition": {
                    "id": 404,
                    "name": "registered",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 402,
                    "src": "3884:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 424,
                    "nodeType": "Block",
                    "src": "3983:86:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 416,
                                  "name": "members",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52,
                                  "src": "4006:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 418,
                                "indexExpression": {
                                  "id": 417,
                                  "name": "member",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "4014:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4006:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4025:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "4006:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d757374204e4f542062652072656769737465726564",
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4032:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa",
                                "typeString": "literal_string \"must NOT be registered\""
                              },
                              "value": "must NOT be registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_296ba9d4c4d81e152508013a7ab430b45b6f6ee7ee9da79c840be91078ab13fa",
                                "typeString": "literal_string \"must NOT be registered\""
                              }
                            ],
                            "id": 415,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3998:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3998:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "3998:59:0"
                      }
                    ]
                  },
                  "id": 425,
                  "nodeType": "IfStatement",
                  "src": "3881:188:0",
                  "trueBody": {
                    "id": 414,
                    "nodeType": "Block",
                    "src": "3896:81:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 406,
                                  "name": "members",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52,
                                  "src": "3919:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 408,
                                "indexExpression": {
                                  "id": 407,
                                  "name": "member",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "3927:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3919:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3938:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "3919:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d7573742062652072656769737465726564",
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3944:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18",
                                "typeString": "literal_string \"must be registered\""
                              },
                              "value": "must be registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c822d109dee76b6630070ef5f3490a15c639b3c9b0f23f5b75af74ceeebdbd18",
                                "typeString": "literal_string \"must be registered\""
                              }
                            ],
                            "id": 405,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3911:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3911:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 413,
                        "nodeType": "ExpressionStatement",
                        "src": "3911:54:0"
                      }
                    ]
                  }
                },
                {
                  "id": 426,
                  "nodeType": "PlaceholderStatement",
                  "src": "4079:1:0"
                }
              ]
            },
            "id": 428,
            "name": "onlyMember",
            "nameLocation": "3826:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3845:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "3837:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "registered",
                  "nameLocation": "3858:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "3853:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3836:33:0"
            },
            "src": "3817:271:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "4121:73:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 431,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4140:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4140:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 433,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "4154:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4140:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792061646d696e",
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4161:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        },
                        "value": "only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
                          "typeString": "literal_string \"only admin\""
                        }
                      ],
                      "id": 430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4132:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4132:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:42:0"
                },
                {
                  "id": 438,
                  "nodeType": "PlaceholderStatement",
                  "src": "4185:1:0"
                }
              ]
            },
            "id": 440,
            "name": "onlyAdmin",
            "nameLocation": "4109:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4118:2:0"
            },
            "src": "4100:94:0",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 442,
        "src": "27:4170:0",
        "usedErrors": []
      }
    ],
    "src": "0:4197:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.5+commit.a4f2e591.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-08-02T17:56:59.074Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}